

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Sep 24 18:47:28 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.10
    16                           ; Generated 31/07/2019 GMT
    17                           ; 
    18                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0094                     	;# 
    97  0098                     	;# 
    98  0099                     	;# 
    99  009C                     	;# 
   100  009D                     	;# 
   101  009E                     	;# 
   102  009F                     	;# 
   103  010C                     	;# 
   104  010D                     	;# 
   105  010E                     	;# 
   106  010F                     	;# 
   107  018C                     	;# 
   108  018D                     	;# 
   109  0000                     	;# 
   110  0001                     	;# 
   111  0002                     	;# 
   112  0003                     	;# 
   113  0004                     	;# 
   114  0005                     	;# 
   115  0006                     	;# 
   116  0007                     	;# 
   117  0008                     	;# 
   118  0009                     	;# 
   119  000A                     	;# 
   120  000B                     	;# 
   121  000C                     	;# 
   122  000D                     	;# 
   123  000E                     	;# 
   124  000E                     	;# 
   125  000F                     	;# 
   126  0010                     	;# 
   127  0011                     	;# 
   128  0012                     	;# 
   129  0013                     	;# 
   130  0014                     	;# 
   131  0015                     	;# 
   132  0015                     	;# 
   133  0016                     	;# 
   134  0017                     	;# 
   135  0018                     	;# 
   136  0019                     	;# 
   137  001A                     	;# 
   138  001B                     	;# 
   139  001B                     	;# 
   140  001C                     	;# 
   141  001D                     	;# 
   142  001E                     	;# 
   143  001F                     	;# 
   144  0081                     	;# 
   145  0085                     	;# 
   146  0086                     	;# 
   147  0087                     	;# 
   148  0088                     	;# 
   149  0089                     	;# 
   150  008C                     	;# 
   151  008D                     	;# 
   152  008E                     	;# 
   153  0091                     	;# 
   154  0092                     	;# 
   155  0093                     	;# 
   156  0094                     	;# 
   157  0098                     	;# 
   158  0099                     	;# 
   159  009C                     	;# 
   160  009D                     	;# 
   161  009E                     	;# 
   162  009F                     	;# 
   163  010C                     	;# 
   164  010D                     	;# 
   165  010E                     	;# 
   166  010F                     	;# 
   167  018C                     	;# 
   168  018D                     	;# 
   169                           
   170                           	psect	idataBANK0
   171  008E                     __pidataBANK0:	
   172                           
   173                           ;initializer for _count
   174  008E  343F               	retlw	63
   175  008F  3406               	retlw	6
   176  0090  345B               	retlw	91
   177  0091  344F               	retlw	79
   178  0092  3466               	retlw	102
   179  0093  346D               	retlw	109
   180  0094  347D               	retlw	125
   181  0095  3407               	retlw	7
   182  0096  347F               	retlw	127
   183  0097  346F               	retlw	111
   184  0005                     _PORTA	set	5
   185  0008                     _PORTD	set	8
   186  000B                     _INTCONbits	set	11
   187  0086                     _TRISBbits	set	134
   188  0081                     _OPTION_REG	set	129
   189  0085                     _TRISA	set	133
   190  0088                     _TRISD	set	136
   191                           
   192                           ; #config settings
   193  0000                     
   194                           	psect	cinit
   195  000F                     start_initialization:	
   196  000F                     __initialization:	
   197                           
   198                           ; Initialize objects allocated to BANK0
   199  000F  1383               	bcf	3,7	;select IRP bank0
   200  0010  302A               	movlw	low (__pdataBANK0+10)
   201  0011  00FD               	movwf	btemp+-1
   202  0012  3000               	movlw	high __pidataBANK0
   203  0013  00FE               	movwf	btemp
   204  0014  308E               	movlw	low __pidataBANK0
   205  0015  00FF               	movwf	btemp+1
   206  0016  3020               	movlw	low __pdataBANK0
   207  0017  0084               	movwf	4
   208  0018  120A  118A  207F  120A  118A  	fcall	init_ram0
   209  001D                     end_of_initialization:	
   210                           ;End of C runtime variable initialization code
   211                           
   212  001D                     __end_of__initialization:	
   213  001D  0183               	clrf	3
   214  001E  120A  118A  2821   	ljmp	_main	;jump to C main() function
   215                           
   216                           	psect	dataBANK0
   217  0020                     __pdataBANK0:	
   218  0020                     _count:	
   219  0020                     	ds	10
   220                           
   221                           	psect	inittext
   222  007B                     init_fetch0:	
   223                           ;	Called with low address in FSR and high address in W
   224                           
   225  007B  087E               	movf	btemp,w
   226  007C  008A               	movwf	10
   227  007D  087F               	movf	btemp+1,w
   228  007E  0082               	movwf	2
   229  007F                     init_ram0:	
   230                           ;Called with:
   231                           ;	high address of idata address in btemp 
   232                           ;	low address of idata address in btemp+1 
   233                           ;	low address of data in FSR
   234                           ;	high address + 1 of data in btemp-1
   235                           
   236  007F  120A  118A  207B  120A  118A  	fcall	init_fetch0
   237  0084  0080               	movwf	0
   238  0085  0A84               	incf	4,f
   239  0086  0804               	movf	4,w
   240  0087  067D               	xorwf	btemp+-1,w
   241  0088  1903               	btfsc	3,2
   242  0089  3400               	retlw	0
   243  008A  0AFF               	incf	btemp+1,f
   244  008B  1903               	btfsc	3,2
   245  008C  0AFE               	incf	btemp,f
   246  008D  287F               	goto	init_ram0
   247                           
   248                           	psect	cstackCOMMON
   249  0070                     __pcstackCOMMON:	
   250  0070                     ?_main:	
   251  0070                     ?_isr:	
   252                           ; 1 bytes @ 0x0
   253                           
   254  0070                     ??_isr:	
   255                           ; 1 bytes @ 0x0
   256                           
   257                           
   258                           ; 1 bytes @ 0x0
   259  0070                     	ds	5
   260  0075                     ??_main:	
   261                           
   262                           ; 1 bytes @ 0x5
   263  0075                     	ds	3
   264                           
   265                           	psect	cstackBANK0
   266  002A                     __pcstackBANK0:	
   267  002A                     main@i:	
   268                           
   269                           ; 2 bytes @ 0x0
   270  002A                     	ds	2
   271                           
   272                           	psect	maintext
   273  0021                     __pmaintext:	
   274 ;;
   275 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   276 ;;
   277 ;; *************** function _main *****************
   278 ;; Defined at:
   279 ;;		line 23 in file "seg7_Int.c"
   280 ;; Parameters:    Size  Location     Type
   281 ;;		None
   282 ;; Auto vars:     Size  Location     Type
   283 ;;  i               2    0[BANK0 ] int 
   284 ;; Return value:  Size  Location     Type
   285 ;;                  1    wreg      void 
   286 ;; Registers used:
   287 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
   288 ;; Tracked objects:
   289 ;;		On entry : B00/0
   290 ;;		On exit  : 0/0
   291 ;;		Unchanged: 0/0
   292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   293 ;;      Params:         0       0       0       0       0
   294 ;;      Locals:         0       2       0       0       0
   295 ;;      Temps:          3       0       0       0       0
   296 ;;      Totals:         3       2       0       0       0
   297 ;;Total ram usage:        5 bytes
   298 ;; Hardware stack levels required when called:    1
   299 ;; This function calls:
   300 ;;		Nothing
   301 ;; This function is called by:
   302 ;;		Startup code after reset
   303 ;; This function uses a non-reentrant model
   304 ;;
   305                           
   306                           
   307                           ;psect for function _main
   308  0021                     _main:	
   309  0021                     l657:	
   310                           ;incstack = 0
   311                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1]
   312                           
   313                           
   314                           ;seg7_Int.c: 24:     TRISD=0X00;
   315  0021  1683               	bsf	3,5	;RP0=1, select bank1
   316  0022  1303               	bcf	3,6	;RP1=0, select bank1
   317  0023  0188               	clrf	8	;volatile
   318                           
   319                           ;seg7_Int.c: 25:     TRISA=0X00;
   320  0024  0185               	clrf	5	;volatile
   321  0025                     l659:	
   322                           
   323                           ;seg7_Int.c: 26:     OPTION_REG=0x080;
   324  0025  3080               	movlw	128
   325  0026  0081               	movwf	1	;volatile
   326  0027                     l661:	
   327                           
   328                           ;seg7_Int.c: 27:     TRISBbits.TRISB0=1;
   329  0027  1406               	bsf	6,0	;volatile
   330  0028                     l663:	
   331                           
   332                           ;seg7_Int.c: 28:     INTCONbits.GIE=1;
   333  0028  178B               	bsf	11,7	;volatile
   334  0029                     l665:	
   335                           
   336                           ;seg7_Int.c: 29:     INTCONbits.INTE=1;
   337  0029  160B               	bsf	11,4	;volatile
   338  002A                     l667:	
   339                           
   340                           ;seg7_Int.c: 30:     INTCONbits.PEIE=1;
   341  002A  170B               	bsf	11,6	;volatile
   342  002B                     l669:	
   343                           
   344                           ;seg7_Int.c: 32:     {;seg7_Int.c: 33:         for(int i=0;i<=9;i++)
   345  002B  1283               	bcf	3,5	;RP0=0, select bank0
   346  002C  1303               	bcf	3,6	;RP1=0, select bank0
   347  002D  01AA               	clrf	main@i
   348  002E  01AB               	clrf	main@i+1
   349  002F                     l675:	
   350                           
   351                           ;seg7_Int.c: 34:         {;seg7_Int.c: 35:             PORTD=count[i];
   352  002F  1283               	bcf	3,5	;RP0=0, select bank0
   353  0030  1303               	bcf	3,6	;RP1=0, select bank0
   354  0031  082A               	movf	main@i,w
   355  0032  3E20               	addlw	(low (_count| 0))& (0+255)
   356  0033  0084               	movwf	4
   357  0034  1383               	bcf	3,7	;select IRP bank0
   358  0035  0800               	movf	0,w
   359  0036  0088               	movwf	8	;volatile
   360  0037                     l677:	
   361                           
   362                           ;seg7_Int.c: 36:             _delay((unsigned long)((500)*(20000000/4000.0)));
   363  0037  300D               	movlw	13
   364  0038  00F7               	movwf	??_main+2
   365  0039  30AF               	movlw	175
   366  003A  00F6               	movwf	??_main+1
   367  003B  30B6               	movlw	182
   368  003C  00F5               	movwf	??_main
   369  003D                     u37:	
   370  003D  0BF5               	decfsz	??_main,f
   371  003E  283D               	goto	u37
   372  003F  0BF6               	decfsz	??_main+1,f
   373  0040  283D               	goto	u37
   374  0041  0BF7               	decfsz	??_main+2,f
   375  0042  283D               	goto	u37
   376  0043  0000               	nop
   377  0044                     l679:	
   378                           
   379                           ;seg7_Int.c: 37:         }
   380  0044  3001               	movlw	1
   381  0045  1283               	bcf	3,5	;RP0=0, select bank0
   382  0046  1303               	bcf	3,6	;RP1=0, select bank0
   383  0047  07AA               	addwf	main@i,f
   384  0048  1803               	skipnc
   385  0049  0AAB               	incf	main@i+1,f
   386  004A  3000               	movlw	0
   387  004B  07AB               	addwf	main@i+1,f
   388  004C                     l681:	
   389  004C  082B               	movf	main@i+1,w
   390  004D  3A80               	xorlw	128
   391  004E  00FF               	movwf	btemp+1
   392  004F  3080               	movlw	128
   393  0050  027F               	subwf	btemp+1,w
   394  0051  1D03               	skipz
   395  0052  2855               	goto	u25
   396  0053  300A               	movlw	10
   397  0054  022A               	subwf	main@i,w
   398  0055                     u25:	
   399  0055  1C03               	skipc
   400  0056  2858               	goto	u21
   401  0057  2859               	goto	u20
   402  0058                     u21:	
   403  0058  282F               	goto	l675
   404  0059                     u20:	
   405  0059  282B               	goto	l669
   406  005A  120A  118A  280C   	ljmp	start
   407  005D                     __end_of_main:	
   408                           
   409                           	psect	text1
   410  005D                     __ptext1:	
   411 ;; *************** function _isr *****************
   412 ;; Defined at:
   413 ;;		line 42 in file "seg7_Int.c"
   414 ;; Parameters:    Size  Location     Type
   415 ;;		None
   416 ;; Auto vars:     Size  Location     Type
   417 ;;		None
   418 ;; Return value:  Size  Location     Type
   419 ;;                  1    wreg      void 
   420 ;; Registers used:
   421 ;;		wreg, status,2
   422 ;; Tracked objects:
   423 ;;		On entry : 0/0
   424 ;;		On exit  : 0/0
   425 ;;		Unchanged: 0/0
   426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   427 ;;      Params:         0       0       0       0       0
   428 ;;      Locals:         0       0       0       0       0
   429 ;;      Temps:          5       0       0       0       0
   430 ;;      Totals:         5       0       0       0       0
   431 ;;Total ram usage:        5 bytes
   432 ;; Hardware stack levels used:    1
   433 ;; This function calls:
   434 ;;		Nothing
   435 ;; This function is called by:
   436 ;;		Interrupt level 1
   437 ;; This function uses a non-reentrant model
   438 ;;
   439                           
   440                           
   441                           ;psect for function _isr
   442  005D                     _isr:	
   443  005D                     i1l651:	
   444                           
   445                           ;seg7_Int.c: 46:         PORTD=0x80;PORTA=0X01;
   446  005D  3080               	movlw	128
   447  005E  1283               	bcf	3,5	;RP0=0, select bank0
   448  005F  1303               	bcf	3,6	;RP1=0, select bank0
   449  0060  0088               	movwf	8	;volatile
   450  0061  3001               	movlw	1
   451  0062  0085               	movwf	5	;volatile
   452                           
   453                           ;seg7_Int.c: 47:         _delay((unsigned long)((500)*(20000000/4000.0)));
   454  0063  300D               	movlw	13
   455  0064  00F2               	movwf	??_isr+2
   456  0065  30AF               	movlw	175
   457  0066  00F1               	movwf	??_isr+1
   458  0067  30B6               	movlw	182
   459  0068  00F0               	movwf	??_isr
   460  0069                     u4_27:	
   461  0069  0BF0               	decfsz	??_isr,f
   462  006A  2869               	goto	u4_27
   463  006B  0BF1               	decfsz	??_isr+1,f
   464  006C  2869               	goto	u4_27
   465  006D  0BF2               	decfsz	??_isr+2,f
   466  006E  2869               	goto	u4_27
   467  006F  0000               	nop
   468  0070                     i1l653:	
   469                           
   470                           ;seg7_Int.c: 48:         PORTA=0X00;
   471  0070  1283               	bcf	3,5	;RP0=0, select bank0
   472  0071  1303               	bcf	3,6	;RP1=0, select bank0
   473  0072  0185               	clrf	5	;volatile
   474  0073                     i1l655:	
   475                           
   476                           ;seg7_Int.c: 49:         INTCONbits.INTF=0;
   477  0073  108B               	bcf	11,1	;volatile
   478  0074                     i1l33:	
   479  0074  0874               	movf	??_isr+4,w
   480  0075  008A               	movwf	10
   481  0076  0E73               	swapf	(??_isr+3)^(0+4294967168),w
   482  0077  0083               	movwf	3
   483  0078  0EFE               	swapf	btemp,f
   484  0079  0E7E               	swapf	btemp,w
   485  007A  0009               	retfie
   486  007B                     __end_of_isr:	
   487  007E                     btemp	set	126	;btemp
   488  007E                     wtemp0	set	126
   489                           
   490                           	psect	intentry
   491  0004                     __pintentry:	
   492                           ;incstack = 0
   493                           ; Regs used in _isr: [wreg+status,2]
   494                           
   495  0004                     interrupt_function:	
   496  007E                     saved_w	set	btemp
   497  0004  00FE               	movwf	btemp
   498  0005  0E03               	swapf	3,w
   499  0006  00F3               	movwf	??_isr+3
   500  0007  080A               	movf	10,w
   501  0008  00F4               	movwf	??_isr+4
   502  0009  120A  118A  285D   	ljmp	_isr


Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80      2      12
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0      68
                                              5 COMMON     3     3      0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _isr                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      2       C       5       15.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       8       1       57.1%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      14      12        0.0%
ABS                  0      0      14       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Sep 24 18:47:28 2020

                      pc 0002              __CFG_CP$OFF 0000                       u20 0059  
                     u21 0058                       u25 0055              __CFG_CPD$ON 0000  
                     u37 003D                       fsr 0004                      l661 0027  
                    l663 0028                      l681 004C                      l665 0029  
                    l657 0021                      l675 002F                      l667 002A  
                    l659 0025                      l677 0037                      l669 002B  
                    l679 0044                      _isr 005D                      fsr0 0004  
                    indf 0000             __CFG_FOSC$HS 0000             __CFG_LVP$OFF 0000  
                   ?_isr 0070                     i1l33 0074                     u4_27 0069  
           __CFG_WRT$OFF 0000                     _main 0021                     btemp 007E  
                   start 000C                    ??_isr 0070                    ?_main 0070  
          __CFG_WDTE$OFF 0000                    i1l651 005D                    i1l653 0070  
                  i1l655 0073                    _PORTA 0005                    _PORTD 0008  
                  _TRISA 0085                    _TRISD 0088                    _count 0020  
                  main@i 002A           __CFG_BOREN$OFF 0000                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 005D                   ??_main 0075           __CFG_PWRTE$OFF 0000  
                 saved_w 007E  __end_of__initialization 001D           __pcstackCOMMON 0070  
           __pidataBANK0 008E               __pmaintext 0021               __pintentry 0004  
                __ptext1 005D             __size_of_isr 001E     end_of_initialization 001D  
              _TRISBbits 0086      start_initialization 000F              __end_of_isr 007B  
             init_fetch0 007B              __pdataBANK0 0020                ___latbits 0002  
          __pcstackBANK0 002A        interrupt_function 0004            __size_of_main 003C  
             _INTCONbits 000B                 init_ram0 007F                 intlevel1 0000  
             _OPTION_REG 0081  
