

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Sep 27 22:18:41 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    10                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.10
    18                           ; Generated 31/07/2019 GMT
    19                           ; 
    20                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F877A Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0094                     	;# 
    99  0098                     	;# 
   100  0099                     	;# 
   101  009C                     	;# 
   102  009D                     	;# 
   103  009E                     	;# 
   104  009F                     	;# 
   105  010C                     	;# 
   106  010D                     	;# 
   107  010E                     	;# 
   108  010F                     	;# 
   109  018C                     	;# 
   110  018D                     	;# 
   111  0000                     	;# 
   112  0001                     	;# 
   113  0002                     	;# 
   114  0003                     	;# 
   115  0004                     	;# 
   116  0005                     	;# 
   117  0006                     	;# 
   118  0007                     	;# 
   119  0008                     	;# 
   120  0009                     	;# 
   121  000A                     	;# 
   122  000B                     	;# 
   123  000C                     	;# 
   124  000D                     	;# 
   125  000E                     	;# 
   126  000E                     	;# 
   127  000F                     	;# 
   128  0010                     	;# 
   129  0011                     	;# 
   130  0012                     	;# 
   131  0013                     	;# 
   132  0014                     	;# 
   133  0015                     	;# 
   134  0015                     	;# 
   135  0016                     	;# 
   136  0017                     	;# 
   137  0018                     	;# 
   138  0019                     	;# 
   139  001A                     	;# 
   140  001B                     	;# 
   141  001B                     	;# 
   142  001C                     	;# 
   143  001D                     	;# 
   144  001E                     	;# 
   145  001F                     	;# 
   146  0081                     	;# 
   147  0085                     	;# 
   148  0086                     	;# 
   149  0087                     	;# 
   150  0088                     	;# 
   151  0089                     	;# 
   152  008C                     	;# 
   153  008D                     	;# 
   154  008E                     	;# 
   155  0091                     	;# 
   156  0092                     	;# 
   157  0093                     	;# 
   158  0094                     	;# 
   159  0098                     	;# 
   160  0099                     	;# 
   161  009C                     	;# 
   162  009D                     	;# 
   163  009E                     	;# 
   164  009F                     	;# 
   165  010C                     	;# 
   166  010D                     	;# 
   167  010E                     	;# 
   168  010F                     	;# 
   169  018C                     	;# 
   170  018D                     	;# 
   171  0006                     _PORTBbits	set	6
   172  0008                     _PORTD	set	8
   173  0088                     _TRISD	set	136
   174  0086                     _TRISB	set	134
   175                           
   176                           ; #config settings
   177  0000                     
   178                           	psect	cinit
   179  07F2                     start_initialization:	
   180  07F2                     __initialization:	
   181                           
   182                           ; Clear objects allocated to COMMON
   183  07F2  01FC               	clrf	__pbssCOMMON& (0+127)
   184  07F3  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
   185                           
   186                           ; Clear objects allocated to BANK0
   187  07F4  1283               	bcf	3,5	;RP0=0, select bank0
   188  07F5  1303               	bcf	3,6	;RP1=0, select bank0
   189  07F6  01A0               	clrf	__pbssBANK0& (0+127)
   190  07F7  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   191  07F8  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   192  07F9  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   193  07FA  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   194  07FB  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   195  07FC                     end_of_initialization:	
   196                           ;End of C runtime variable initialization code
   197                           
   198  07FC                     __end_of__initialization:	
   199  07FC  0183               	clrf	3
   200  07FD  120A  118A  2F54   	ljmp	_main	;jump to C main() function
   201                           
   202                           	psect	bssCOMMON
   203  007C                     __pbssCOMMON:	
   204  007C                     _i:	
   205  007C                     	ds	2
   206                           
   207                           	psect	bssBANK0
   208  0020                     __pbssBANK0:	
   209  0020                     _change2:	
   210  0020                     	ds	2
   211  0022                     _change1:	
   212  0022                     	ds	2
   213  0024                     _mod2:	
   214  0024                     	ds	1
   215  0025                     _mod1:	
   216  0025                     	ds	1
   217                           
   218                           	psect	cstackCOMMON
   219  0070                     __pcstackCOMMON:	
   220  0070                     ?_LCD_Init:	
   221  0070                     ?_LCD_Command:	
   222                           ; 1 bytes @ 0x0
   223                           
   224  0070                     ??_LCD_Command:	
   225                           ; 1 bytes @ 0x0
   226                           
   227  0070                     ?_LCD_Char:	
   228                           ; 1 bytes @ 0x0
   229                           
   230  0070                     ??_LCD_Char:	
   231                           ; 1 bytes @ 0x0
   232                           
   233  0070                     ?_MSdelay:	
   234                           ; 1 bytes @ 0x0
   235                           
   236  0070                     ?_main:	
   237                           ; 1 bytes @ 0x0
   238                           
   239  0070                     ?___awdiv:	
   240                           ; 2 bytes @ 0x0
   241                           
   242  0070                     ?___awmod:	
   243                           ; 2 bytes @ 0x0
   244                           
   245  0070                     MSdelay@val:	
   246                           ; 2 bytes @ 0x0
   247                           
   248  0070                     ___awdiv@divisor:	
   249                           ; 2 bytes @ 0x0
   250                           
   251  0070                     ___awmod@divisor:	
   252                           ; 2 bytes @ 0x0
   253                           
   254                           
   255                           ; 2 bytes @ 0x0
   256  0070                     	ds	2
   257  0072                     ??_MSdelay:	
   258  0072                     LCD_Command@cmd:	
   259                           ; 1 bytes @ 0x2
   260                           
   261  0072                     LCD_Char@dat:	
   262                           ; 1 bytes @ 0x2
   263                           
   264  0072                     MSdelay@i:	
   265                           ; 1 bytes @ 0x2
   266                           
   267  0072                     ___awdiv@dividend:	
   268                           ; 2 bytes @ 0x2
   269                           
   270  0072                     ___awmod@dividend:	
   271                           ; 2 bytes @ 0x2
   272                           
   273                           
   274                           ; 2 bytes @ 0x2
   275  0072                     	ds	2
   276  0074                     ??___awdiv:	
   277  0074                     ??___awmod:	
   278                           ; 1 bytes @ 0x4
   279                           
   280  0074                     MSdelay@j:	
   281                           ; 1 bytes @ 0x4
   282                           
   283                           
   284                           ; 2 bytes @ 0x4
   285  0074                     	ds	1
   286  0075                     ___awdiv@counter:	
   287  0075                     ___awmod@counter:	
   288                           ; 1 bytes @ 0x5
   289                           
   290                           
   291                           ; 1 bytes @ 0x5
   292  0075                     	ds	1
   293  0076                     ??_LCD_Init:	
   294  0076                     ___awdiv@sign:	
   295                           ; 1 bytes @ 0x6
   296                           
   297  0076                     ___awmod@sign:	
   298                           ; 1 bytes @ 0x6
   299                           
   300                           
   301                           ; 1 bytes @ 0x6
   302  0076                     	ds	1
   303  0077                     ___awdiv@quotient:	
   304                           
   305                           ; 2 bytes @ 0x7
   306  0077                     	ds	2
   307  0079                     ??_main:	
   308                           
   309                           ; 1 bytes @ 0x9
   310  0079                     	ds	3
   311                           
   312                           	psect	maintext
   313  0754                     __pmaintext:	
   314 ;;
   315 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   316 ;;
   317 ;; *************** function _main *****************
   318 ;; Defined at:
   319 ;;		line 43 in file "4bit_mode_lcd.c"
   320 ;; Parameters:    Size  Location     Type
   321 ;;		None
   322 ;; Auto vars:     Size  Location     Type
   323 ;;		None
   324 ;; Return value:  Size  Location     Type
   325 ;;                  2   32[None  ] int 
   326 ;; Registers used:
   327 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   328 ;; Tracked objects:
   329 ;;		On entry : B00/0
   330 ;;		On exit  : 0/0
   331 ;;		Unchanged: 0/0
   332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   333 ;;      Params:         0       0       0       0       0
   334 ;;      Locals:         0       0       0       0       0
   335 ;;      Temps:          3       0       0       0       0
   336 ;;      Totals:         3       0       0       0       0
   337 ;;Total ram usage:        3 bytes
   338 ;; Hardware stack levels required when called:    2
   339 ;; This function calls:
   340 ;;		_LCD_Char
   341 ;;		_LCD_Command
   342 ;;		_LCD_Init
   343 ;;		___awdiv
   344 ;;		___awmod
   345 ;; This function is called by:
   346 ;;		Startup code after reset
   347 ;; This function uses a non-reentrant model
   348 ;;
   349                           
   350                           
   351                           ;psect for function _main
   352  0754                     _main:	
   353  0754                     l1024:	
   354                           ;incstack = 0
   355                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   356                           
   357  0754  1683               	bsf	3,5	;RP0=1, select bank1
   358  0755  1303               	bcf	3,6	;RP1=0, select bank1
   359  0756  0186               	clrf	6	;volatile
   360  0757                     l1026:	
   361  0757  120A  118A  25E1  120A  118A  	fcall	_LCD_Init
   362  075C                     l1028:	
   363  075C  3008               	movlw	8
   364  075D  00FB               	movwf	??_main+2
   365  075E  309D               	movlw	157
   366  075F  00FA               	movwf	??_main+1
   367  0760  3005               	movlw	5
   368  0761  00F9               	movwf	??_main
   369  0762                     u577:	
   370  0762  0BF9               	decfsz	??_main,f
   371  0763  2F62               	goto	u577
   372  0764  0BFA               	decfsz	??_main+1,f
   373  0765  2F62               	goto	u577
   374  0766  0BFB               	decfsz	??_main+2,f
   375  0767  2F62               	goto	u577
   376  0768  2F69               	nop2
   377  0769                     l1030:	
   378  0769  087C               	movf	_i,w
   379  076A  3E01               	addlw	1
   380  076B  00FC               	movwf	_i
   381  076C  087D               	movf	_i+1,w
   382  076D  1803               	skipnc
   383  076E  3E01               	addlw	1
   384  076F  3E00               	addlw	0
   385  0770  00FD               	movwf	_i+1
   386  0771                     l1032:	
   387  0771  087D               	movf	_i+1,w
   388  0772  3A80               	xorlw	128
   389  0773  00FF               	movwf	btemp+1
   390  0774  3080               	movlw	128
   391  0775  027F               	subwf	btemp+1,w
   392  0776  1D03               	skipz
   393  0777  2F7A               	goto	u535
   394  0778  300A               	movlw	10
   395  0779  027C               	subwf	_i,w
   396  077A                     u535:	
   397  077A  1803               	skipnc
   398  077B  2F7D               	goto	u531
   399  077C  2F7E               	goto	u530
   400  077D                     u531:	
   401  077D  2F85               	goto	l1036
   402  077E                     u530:	
   403  077E                     l1034:	
   404  077E  087D               	movf	_i+1,w
   405  077F  1283               	bcf	3,5	;RP0=0, select bank0
   406  0780  1303               	bcf	3,6	;RP1=0, select bank0
   407  0781  00A3               	movwf	_change1+1
   408  0782  087C               	movf	_i,w
   409  0783  00A2               	movwf	_change1
   410  0784  2FCE               	goto	l1044
   411  0785                     l1036:	
   412  0785  087D               	movf	_i+1,w
   413  0786  3A80               	xorlw	128
   414  0787  00FF               	movwf	btemp+1
   415  0788  3080               	movlw	128
   416  0789  027F               	subwf	btemp+1,w
   417  078A  1D03               	skipz
   418  078B  2F8E               	goto	u545
   419  078C  3064               	movlw	100
   420  078D  027C               	subwf	_i,w
   421  078E                     u545:	
   422  078E  1803               	skipnc
   423  078F  2F91               	goto	u541
   424  0790  2F92               	goto	u540
   425  0791                     u541:	
   426  0791  2FB9               	goto	l1040
   427  0792                     u540:	
   428  0792                     l1038:	
   429  0792  300A               	movlw	10
   430  0793  00F0               	movwf	___awmod@divisor
   431  0794  3000               	movlw	0
   432  0795  00F1               	movwf	___awmod@divisor+1
   433  0796  087D               	movf	_i+1,w
   434  0797  00F3               	movwf	___awmod@dividend+1
   435  0798  087C               	movf	_i,w
   436  0799  00F2               	movwf	___awmod@dividend
   437  079A  120A  118A  2694  120A  118A  	fcall	___awmod
   438  079F  0871               	movf	?___awmod+1,w
   439  07A0  1283               	bcf	3,5	;RP0=0, select bank0
   440  07A1  1303               	bcf	3,6	;RP1=0, select bank0
   441  07A2  00A3               	movwf	_change1+1
   442  07A3  0870               	movf	?___awmod,w
   443  07A4  00A2               	movwf	_change1
   444  07A5  300A               	movlw	10
   445  07A6  00F0               	movwf	___awdiv@divisor
   446  07A7  3000               	movlw	0
   447  07A8  00F1               	movwf	___awdiv@divisor+1
   448  07A9  087D               	movf	_i+1,w
   449  07AA  00F3               	movwf	___awdiv@dividend+1
   450  07AB  087C               	movf	_i,w
   451  07AC  00F2               	movwf	___awdiv@dividend
   452  07AD  120A  118A  26ED  120A  118A  	fcall	___awdiv
   453  07B2  0871               	movf	?___awdiv+1,w
   454  07B3  1283               	bcf	3,5	;RP0=0, select bank0
   455  07B4  1303               	bcf	3,6	;RP1=0, select bank0
   456  07B5  00A1               	movwf	_change2+1
   457  07B6  0870               	movf	?___awdiv,w
   458  07B7  00A0               	movwf	_change2
   459  07B8  2FCE               	goto	l1044
   460  07B9                     l1040:	
   461  07B9  087D               	movf	_i+1,w
   462  07BA  3A80               	xorlw	128
   463  07BB  00FF               	movwf	btemp+1
   464  07BC  3080               	movlw	128
   465  07BD  027F               	subwf	btemp+1,w
   466  07BE  1D03               	skipz
   467  07BF  2FC2               	goto	u555
   468  07C0  3064               	movlw	100
   469  07C1  027C               	subwf	_i,w
   470  07C2                     u555:	
   471  07C2  1C03               	skipc
   472  07C3  2FC5               	goto	u551
   473  07C4  2FC6               	goto	u550
   474  07C5                     u551:	
   475  07C5  2FCE               	goto	l1044
   476  07C6                     u550:	
   477  07C6                     l1042:	
   478  07C6  1283               	bcf	3,5	;RP0=0, select bank0
   479  07C7  1303               	bcf	3,6	;RP1=0, select bank0
   480  07C8  01A2               	clrf	_change1
   481  07C9  01A3               	clrf	_change1+1
   482  07CA  01A0               	clrf	_change2
   483  07CB  01A1               	clrf	_change2+1
   484  07CC  01FC               	clrf	_i
   485  07CD  01FD               	clrf	_i+1
   486  07CE                     l1044:	
   487  07CE  1283               	bcf	3,5	;RP0=0, select bank0
   488  07CF  1303               	bcf	3,6	;RP1=0, select bank0
   489  07D0  0822               	movf	_change1,w
   490  07D1  3E30               	addlw	48
   491  07D2  00F9               	movwf	??_main
   492  07D3  0879               	movf	??_main,w
   493  07D4  00A5               	movwf	_mod1
   494  07D5                     l1046:	
   495  07D5  0820               	movf	_change2,w
   496  07D6  3E30               	addlw	48
   497  07D7  00F9               	movwf	??_main
   498  07D8  0879               	movf	??_main,w
   499  07D9  00A4               	movwf	_mod2
   500  07DA                     l1048:	
   501  07DA  3080               	movlw	128
   502  07DB  120A  118A  260C  120A  118A  	fcall	_LCD_Command
   503  07E0                     l1050:	
   504  07E0  306B               	movlw	107
   505  07E1  120A  118A  264E  120A  118A  	fcall	_LCD_Char
   506  07E6                     l1052:	
   507  07E6  1283               	bcf	3,5	;RP0=0, select bank0
   508  07E7  1303               	bcf	3,6	;RP1=0, select bank0
   509  07E8  0825               	movf	_mod1,w
   510  07E9  120A  118A  264E  120A  118A  	fcall	_LCD_Char
   511  07EE  2F5C               	goto	l1028
   512  07EF  120A  118A  2800   	ljmp	start
   513  07F2                     __end_of_main:	
   514                           
   515                           	psect	text1
   516  0694                     __ptext1:	
   517 ;; *************** function ___awmod *****************
   518 ;; Defined at:
   519 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
   520 ;; Parameters:    Size  Location     Type
   521 ;;  divisor         2    0[COMMON] int 
   522 ;;  dividend        2    2[COMMON] int 
   523 ;; Auto vars:     Size  Location     Type
   524 ;;  sign            1    6[COMMON] unsigned char 
   525 ;;  counter         1    5[COMMON] unsigned char 
   526 ;; Return value:  Size  Location     Type
   527 ;;                  2    0[COMMON] int 
   528 ;; Registers used:
   529 ;;		wreg, status,2, status,0
   530 ;; Tracked objects:
   531 ;;		On entry : 0/0
   532 ;;		On exit  : 0/0
   533 ;;		Unchanged: 0/0
   534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   535 ;;      Params:         4       0       0       0       0
   536 ;;      Locals:         2       0       0       0       0
   537 ;;      Temps:          1       0       0       0       0
   538 ;;      Totals:         7       0       0       0       0
   539 ;;Total ram usage:        7 bytes
   540 ;; Hardware stack levels used:    1
   541 ;; This function calls:
   542 ;;		Nothing
   543 ;; This function is called by:
   544 ;;		_main
   545 ;; This function uses a non-reentrant model
   546 ;;
   547                           
   548                           
   549                           ;psect for function ___awmod
   550  0694                     ___awmod:	
   551  0694                     l986:	
   552                           ;incstack = 0
   553                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   554                           
   555  0694  01F6               	clrf	___awmod@sign
   556  0695                     l988:	
   557  0695  1FF3               	btfss	___awmod@dividend+1,7
   558  0696  2E98               	goto	u441
   559  0697  2E99               	goto	u440
   560  0698                     u441:	
   561  0698  2EA0               	goto	l994
   562  0699                     u440:	
   563  0699                     l990:	
   564  0699  09F2               	comf	___awmod@dividend,f
   565  069A  09F3               	comf	___awmod@dividend+1,f
   566  069B  0AF2               	incf	___awmod@dividend,f
   567  069C  1903               	skipnz
   568  069D  0AF3               	incf	___awmod@dividend+1,f
   569  069E                     l992:	
   570  069E  01F6               	clrf	___awmod@sign
   571  069F  0AF6               	incf	___awmod@sign,f
   572  06A0                     l994:	
   573  06A0  1FF1               	btfss	___awmod@divisor+1,7
   574  06A1  2EA3               	goto	u451
   575  06A2  2EA4               	goto	u450
   576  06A3                     u451:	
   577  06A3  2EA9               	goto	l998
   578  06A4                     u450:	
   579  06A4                     l996:	
   580  06A4  09F0               	comf	___awmod@divisor,f
   581  06A5  09F1               	comf	___awmod@divisor+1,f
   582  06A6  0AF0               	incf	___awmod@divisor,f
   583  06A7  1903               	skipnz
   584  06A8  0AF1               	incf	___awmod@divisor+1,f
   585  06A9                     l998:	
   586  06A9  0870               	movf	___awmod@divisor,w
   587  06AA  0471               	iorwf	___awmod@divisor+1,w
   588  06AB  1903               	btfsc	3,2
   589  06AC  2EAE               	goto	u461
   590  06AD  2EAF               	goto	u460
   591  06AE                     u461:	
   592  06AE  2EDE               	goto	l1016
   593  06AF                     u460:	
   594  06AF                     l1000:	
   595  06AF  01F5               	clrf	___awmod@counter
   596  06B0  0AF5               	incf	___awmod@counter,f
   597  06B1  2EBD               	goto	l1006
   598  06B2                     l1002:	
   599  06B2  3001               	movlw	1
   600  06B3                     u475:	
   601  06B3  1003               	clrc
   602  06B4  0DF0               	rlf	___awmod@divisor,f
   603  06B5  0DF1               	rlf	___awmod@divisor+1,f
   604  06B6  3EFF               	addlw	-1
   605  06B7  1D03               	skipz
   606  06B8  2EB3               	goto	u475
   607  06B9                     l1004:	
   608  06B9  3001               	movlw	1
   609  06BA  00F4               	movwf	??___awmod
   610  06BB  0874               	movf	??___awmod,w
   611  06BC  07F5               	addwf	___awmod@counter,f
   612  06BD                     l1006:	
   613  06BD  1FF1               	btfss	___awmod@divisor+1,7
   614  06BE  2EC0               	goto	u481
   615  06BF  2EC1               	goto	u480
   616  06C0                     u481:	
   617  06C0  2EB2               	goto	l1002
   618  06C1                     u480:	
   619  06C1                     l1008:	
   620  06C1  0871               	movf	___awmod@divisor+1,w
   621  06C2  0273               	subwf	___awmod@dividend+1,w
   622  06C3  1D03               	skipz
   623  06C4  2EC7               	goto	u495
   624  06C5  0870               	movf	___awmod@divisor,w
   625  06C6  0272               	subwf	___awmod@dividend,w
   626  06C7                     u495:	
   627  06C7  1C03               	skipc
   628  06C8  2ECA               	goto	u491
   629  06C9  2ECB               	goto	u490
   630  06CA                     u491:	
   631  06CA  2ED1               	goto	l1012
   632  06CB                     u490:	
   633  06CB                     l1010:	
   634  06CB  0870               	movf	___awmod@divisor,w
   635  06CC  02F2               	subwf	___awmod@dividend,f
   636  06CD  0871               	movf	___awmod@divisor+1,w
   637  06CE  1C03               	skipc
   638  06CF  03F3               	decf	___awmod@dividend+1,f
   639  06D0  02F3               	subwf	___awmod@dividend+1,f
   640  06D1                     l1012:	
   641  06D1  3001               	movlw	1
   642  06D2                     u505:	
   643  06D2  1003               	clrc
   644  06D3  0CF1               	rrf	___awmod@divisor+1,f
   645  06D4  0CF0               	rrf	___awmod@divisor,f
   646  06D5  3EFF               	addlw	-1
   647  06D6  1D03               	skipz
   648  06D7  2ED2               	goto	u505
   649  06D8                     l1014:	
   650  06D8  3001               	movlw	1
   651  06D9  02F5               	subwf	___awmod@counter,f
   652  06DA  1D03               	btfss	3,2
   653  06DB  2EDD               	goto	u511
   654  06DC  2EDE               	goto	u510
   655  06DD                     u511:	
   656  06DD  2EC1               	goto	l1008
   657  06DE                     u510:	
   658  06DE                     l1016:	
   659  06DE  0876               	movf	___awmod@sign,w
   660  06DF  1903               	btfsc	3,2
   661  06E0  2EE2               	goto	u521
   662  06E1  2EE3               	goto	u520
   663  06E2                     u521:	
   664  06E2  2EE8               	goto	l1020
   665  06E3                     u520:	
   666  06E3                     l1018:	
   667  06E3  09F2               	comf	___awmod@dividend,f
   668  06E4  09F3               	comf	___awmod@dividend+1,f
   669  06E5  0AF2               	incf	___awmod@dividend,f
   670  06E6  1903               	skipnz
   671  06E7  0AF3               	incf	___awmod@dividend+1,f
   672  06E8                     l1020:	
   673  06E8  0873               	movf	___awmod@dividend+1,w
   674  06E9  00F1               	movwf	?___awmod+1
   675  06EA  0872               	movf	___awmod@dividend,w
   676  06EB  00F0               	movwf	?___awmod
   677  06EC                     l324:	
   678  06EC  0008               	return
   679  06ED                     __end_of___awmod:	
   680                           
   681                           	psect	text2
   682  06ED                     __ptext2:	
   683 ;; *************** function ___awdiv *****************
   684 ;; Defined at:
   685 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
   686 ;; Parameters:    Size  Location     Type
   687 ;;  divisor         2    0[COMMON] int 
   688 ;;  dividend        2    2[COMMON] int 
   689 ;; Auto vars:     Size  Location     Type
   690 ;;  quotient        2    7[COMMON] int 
   691 ;;  sign            1    6[COMMON] unsigned char 
   692 ;;  counter         1    5[COMMON] unsigned char 
   693 ;; Return value:  Size  Location     Type
   694 ;;                  2    0[COMMON] int 
   695 ;; Registers used:
   696 ;;		wreg, status,2, status,0
   697 ;; Tracked objects:
   698 ;;		On entry : 0/0
   699 ;;		On exit  : 0/0
   700 ;;		Unchanged: 0/0
   701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   702 ;;      Params:         4       0       0       0       0
   703 ;;      Locals:         4       0       0       0       0
   704 ;;      Temps:          1       0       0       0       0
   705 ;;      Totals:         9       0       0       0       0
   706 ;;Total ram usage:        9 bytes
   707 ;; Hardware stack levels used:    1
   708 ;; This function calls:
   709 ;;		Nothing
   710 ;; This function is called by:
   711 ;;		_main
   712 ;; This function uses a non-reentrant model
   713 ;;
   714                           
   715                           
   716                           ;psect for function ___awdiv
   717  06ED                     ___awdiv:	
   718  06ED                     l942:	
   719                           ;incstack = 0
   720                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   721                           
   722  06ED  01F6               	clrf	___awdiv@sign
   723  06EE                     l944:	
   724  06EE  1FF1               	btfss	___awdiv@divisor+1,7
   725  06EF  2EF1               	goto	u341
   726  06F0  2EF2               	goto	u340
   727  06F1                     u341:	
   728  06F1  2EF9               	goto	l950
   729  06F2                     u340:	
   730  06F2                     l946:	
   731  06F2  09F0               	comf	___awdiv@divisor,f
   732  06F3  09F1               	comf	___awdiv@divisor+1,f
   733  06F4  0AF0               	incf	___awdiv@divisor,f
   734  06F5  1903               	skipnz
   735  06F6  0AF1               	incf	___awdiv@divisor+1,f
   736  06F7                     l948:	
   737  06F7  01F6               	clrf	___awdiv@sign
   738  06F8  0AF6               	incf	___awdiv@sign,f
   739  06F9                     l950:	
   740  06F9  1FF3               	btfss	___awdiv@dividend+1,7
   741  06FA  2EFC               	goto	u351
   742  06FB  2EFD               	goto	u350
   743  06FC                     u351:	
   744  06FC  2F06               	goto	l956
   745  06FD                     u350:	
   746  06FD                     l952:	
   747  06FD  09F2               	comf	___awdiv@dividend,f
   748  06FE  09F3               	comf	___awdiv@dividend+1,f
   749  06FF  0AF2               	incf	___awdiv@dividend,f
   750  0700  1903               	skipnz
   751  0701  0AF3               	incf	___awdiv@dividend+1,f
   752  0702                     l954:	
   753  0702  3001               	movlw	1
   754  0703  00F4               	movwf	??___awdiv
   755  0704  0874               	movf	??___awdiv,w
   756  0705  06F6               	xorwf	___awdiv@sign,f
   757  0706                     l956:	
   758  0706  01F7               	clrf	___awdiv@quotient
   759  0707  01F8               	clrf	___awdiv@quotient+1
   760  0708                     l958:	
   761  0708  0870               	movf	___awdiv@divisor,w
   762  0709  0471               	iorwf	___awdiv@divisor+1,w
   763  070A  1903               	btfsc	3,2
   764  070B  2F0D               	goto	u361
   765  070C  2F0E               	goto	u360
   766  070D                     u361:	
   767  070D  2F45               	goto	l978
   768  070E                     u360:	
   769  070E                     l960:	
   770  070E  01F5               	clrf	___awdiv@counter
   771  070F  0AF5               	incf	___awdiv@counter,f
   772  0710  2F1C               	goto	l966
   773  0711                     l962:	
   774  0711  3001               	movlw	1
   775  0712                     u375:	
   776  0712  1003               	clrc
   777  0713  0DF0               	rlf	___awdiv@divisor,f
   778  0714  0DF1               	rlf	___awdiv@divisor+1,f
   779  0715  3EFF               	addlw	-1
   780  0716  1D03               	skipz
   781  0717  2F12               	goto	u375
   782  0718                     l964:	
   783  0718  3001               	movlw	1
   784  0719  00F4               	movwf	??___awdiv
   785  071A  0874               	movf	??___awdiv,w
   786  071B  07F5               	addwf	___awdiv@counter,f
   787  071C                     l966:	
   788  071C  1FF1               	btfss	___awdiv@divisor+1,7
   789  071D  2F1F               	goto	u381
   790  071E  2F20               	goto	u380
   791  071F                     u381:	
   792  071F  2F11               	goto	l962
   793  0720                     u380:	
   794  0720                     l968:	
   795  0720  3001               	movlw	1
   796  0721                     u395:	
   797  0721  1003               	clrc
   798  0722  0DF7               	rlf	___awdiv@quotient,f
   799  0723  0DF8               	rlf	___awdiv@quotient+1,f
   800  0724  3EFF               	addlw	-1
   801  0725  1D03               	skipz
   802  0726  2F21               	goto	u395
   803  0727  0871               	movf	___awdiv@divisor+1,w
   804  0728  0273               	subwf	___awdiv@dividend+1,w
   805  0729  1D03               	skipz
   806  072A  2F2D               	goto	u405
   807  072B  0870               	movf	___awdiv@divisor,w
   808  072C  0272               	subwf	___awdiv@dividend,w
   809  072D                     u405:	
   810  072D  1C03               	skipc
   811  072E  2F30               	goto	u401
   812  072F  2F31               	goto	u400
   813  0730                     u401:	
   814  0730  2F38               	goto	l974
   815  0731                     u400:	
   816  0731                     l970:	
   817  0731  0870               	movf	___awdiv@divisor,w
   818  0732  02F2               	subwf	___awdiv@dividend,f
   819  0733  0871               	movf	___awdiv@divisor+1,w
   820  0734  1C03               	skipc
   821  0735  03F3               	decf	___awdiv@dividend+1,f
   822  0736  02F3               	subwf	___awdiv@dividend+1,f
   823  0737                     l972:	
   824  0737  1477               	bsf	___awdiv@quotient,0
   825  0738                     l974:	
   826  0738  3001               	movlw	1
   827  0739                     u415:	
   828  0739  1003               	clrc
   829  073A  0CF1               	rrf	___awdiv@divisor+1,f
   830  073B  0CF0               	rrf	___awdiv@divisor,f
   831  073C  3EFF               	addlw	-1
   832  073D  1D03               	skipz
   833  073E  2F39               	goto	u415
   834  073F                     l976:	
   835  073F  3001               	movlw	1
   836  0740  02F5               	subwf	___awdiv@counter,f
   837  0741  1D03               	btfss	3,2
   838  0742  2F44               	goto	u421
   839  0743  2F45               	goto	u420
   840  0744                     u421:	
   841  0744  2F20               	goto	l968
   842  0745                     u420:	
   843  0745                     l978:	
   844  0745  0876               	movf	___awdiv@sign,w
   845  0746  1903               	btfsc	3,2
   846  0747  2F49               	goto	u431
   847  0748  2F4A               	goto	u430
   848  0749                     u431:	
   849  0749  2F4F               	goto	l982
   850  074A                     u430:	
   851  074A                     l980:	
   852  074A  09F7               	comf	___awdiv@quotient,f
   853  074B  09F8               	comf	___awdiv@quotient+1,f
   854  074C  0AF7               	incf	___awdiv@quotient,f
   855  074D  1903               	skipnz
   856  074E  0AF8               	incf	___awdiv@quotient+1,f
   857  074F                     l982:	
   858  074F  0878               	movf	___awdiv@quotient+1,w
   859  0750  00F1               	movwf	?___awdiv+1
   860  0751  0877               	movf	___awdiv@quotient,w
   861  0752  00F0               	movwf	?___awdiv
   862  0753                     l311:	
   863  0753  0008               	return
   864  0754                     __end_of___awdiv:	
   865                           
   866                           	psect	text3
   867  05E1                     __ptext3:	
   868 ;; *************** function _LCD_Init *****************
   869 ;; Defined at:
   870 ;;		line 75 in file "4bit_mode_lcd.c"
   871 ;; Parameters:    Size  Location     Type
   872 ;;		None
   873 ;; Auto vars:     Size  Location     Type
   874 ;;		None
   875 ;; Return value:  Size  Location     Type
   876 ;;                  1    wreg      void 
   877 ;; Registers used:
   878 ;;		wreg, status,2, status,0, pclath, cstack
   879 ;; Tracked objects:
   880 ;;		On entry : 0/0
   881 ;;		On exit  : 0/0
   882 ;;		Unchanged: 0/0
   883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   884 ;;      Params:         0       0       0       0       0
   885 ;;      Locals:         0       0       0       0       0
   886 ;;      Temps:          0       0       0       0       0
   887 ;;      Totals:         0       0       0       0       0
   888 ;;Total ram usage:        0 bytes
   889 ;; Hardware stack levels used:    1
   890 ;; Hardware stack levels required when called:    1
   891 ;; This function calls:
   892 ;;		_LCD_Command
   893 ;;		_MSdelay
   894 ;; This function is called by:
   895 ;;		_main
   896 ;; This function uses a non-reentrant model
   897 ;;
   898                           
   899                           
   900                           ;psect for function _LCD_Init
   901  05E1                     _LCD_Init:	
   902  05E1                     l900:	
   903                           ;incstack = 0
   904                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
   905                           
   906  05E1  1683               	bsf	3,5	;RP0=1, select bank1
   907  05E2  1303               	bcf	3,6	;RP1=0, select bank1
   908  05E3  0188               	clrf	8	;volatile
   909  05E4                     l902:	
   910  05E4  300F               	movlw	15
   911  05E5  00F0               	movwf	MSdelay@val
   912  05E6  3000               	movlw	0
   913  05E7  00F1               	movwf	MSdelay@val+1
   914  05E8  120A  118A  25BC  120A  118A  	fcall	_MSdelay
   915  05ED                     l904:	
   916  05ED  3002               	movlw	2
   917  05EE  120A  118A  260C  120A  118A  	fcall	_LCD_Command
   918  05F3                     l906:	
   919  05F3  3028               	movlw	40
   920  05F4  120A  118A  260C  120A  118A  	fcall	_LCD_Command
   921  05F9                     l908:	
   922  05F9  3001               	movlw	1
   923  05FA  120A  118A  260C  120A  118A  	fcall	_LCD_Command
   924  05FF                     l910:	
   925  05FF  300C               	movlw	12
   926  0600  120A  118A  260C  120A  118A  	fcall	_LCD_Command
   927  0605                     l912:	
   928  0605  3006               	movlw	6
   929  0606  120A  118A  260C  120A  118A  	fcall	_LCD_Command
   930  060B                     l44:	
   931  060B  0008               	return
   932  060C                     __end_of_LCD_Init:	
   933                           
   934                           	psect	text4
   935  05BC                     __ptext4:	
   936 ;; *************** function _MSdelay *****************
   937 ;; Defined at:
   938 ;;		line 150 in file "4bit_mode_lcd.c"
   939 ;; Parameters:    Size  Location     Type
   940 ;;  val             2    0[COMMON] unsigned int 
   941 ;; Auto vars:     Size  Location     Type
   942 ;;  j               2    4[COMMON] unsigned int 
   943 ;;  i               2    2[COMMON] unsigned int 
   944 ;; Return value:  Size  Location     Type
   945 ;;                  1    wreg      void 
   946 ;; Registers used:
   947 ;;		wreg, status,2
   948 ;; Tracked objects:
   949 ;;		On entry : 0/0
   950 ;;		On exit  : 0/0
   951 ;;		Unchanged: 0/0
   952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   953 ;;      Params:         2       0       0       0       0
   954 ;;      Locals:         4       0       0       0       0
   955 ;;      Temps:          0       0       0       0       0
   956 ;;      Totals:         6       0       0       0       0
   957 ;;Total ram usage:        6 bytes
   958 ;; Hardware stack levels used:    1
   959 ;; This function calls:
   960 ;;		Nothing
   961 ;; This function is called by:
   962 ;;		_LCD_Init
   963 ;; This function uses a non-reentrant model
   964 ;;
   965                           
   966                           
   967                           ;psect for function _MSdelay
   968  05BC                     _MSdelay:	
   969  05BC                     l888:	
   970                           ;incstack = 0
   971                           ; Regs used in _MSdelay: [wreg+status,2]
   972                           
   973  05BC  01F2               	clrf	MSdelay@i
   974  05BD  01F3               	clrf	MSdelay@i+1
   975  05BE  2DD6               	goto	l67
   976  05BF                     l890:	
   977  05BF  01F4               	clrf	MSdelay@j
   978  05C0  01F5               	clrf	MSdelay@j+1
   979  05C1                     l896:	
   980  05C1  3001               	movlw	1
   981  05C2  07F4               	addwf	MSdelay@j,f
   982  05C3  1803               	skipnc
   983  05C4  0AF5               	incf	MSdelay@j+1,f
   984  05C5  3000               	movlw	0
   985  05C6  07F5               	addwf	MSdelay@j+1,f
   986  05C7  3000               	movlw	0
   987  05C8  0275               	subwf	MSdelay@j+1,w
   988  05C9  30A5               	movlw	165
   989  05CA  1903               	skipnz
   990  05CB  0274               	subwf	MSdelay@j,w
   991  05CC  1C03               	skipc
   992  05CD  2DCF               	goto	u301
   993  05CE  2DD0               	goto	u300
   994  05CF                     u301:	
   995  05CF  2DC1               	goto	l896
   996  05D0                     u300:	
   997  05D0                     l898:	
   998  05D0  3001               	movlw	1
   999  05D1  07F2               	addwf	MSdelay@i,f
  1000  05D2  1803               	skipnc
  1001  05D3  0AF3               	incf	MSdelay@i+1,f
  1002  05D4  3000               	movlw	0
  1003  05D5  07F3               	addwf	MSdelay@i+1,f
  1004  05D6                     l67:	
  1005  05D6  0871               	movf	MSdelay@val+1,w
  1006  05D7  0273               	subwf	MSdelay@i+1,w
  1007  05D8  1D03               	skipz
  1008  05D9  2DDC               	goto	u315
  1009  05DA  0870               	movf	MSdelay@val,w
  1010  05DB  0272               	subwf	MSdelay@i,w
  1011  05DC                     u315:	
  1012  05DC  1C03               	skipc
  1013  05DD  2DDF               	goto	u311
  1014  05DE  2DE0               	goto	u310
  1015  05DF                     u311:	
  1016  05DF  2DBF               	goto	l890
  1017  05E0                     u310:	
  1018  05E0                     l72:	
  1019  05E0  0008               	return
  1020  05E1                     __end_of_MSdelay:	
  1021                           
  1022                           	psect	text5
  1023  060C                     __ptext5:	
  1024 ;; *************** function _LCD_Command *****************
  1025 ;; Defined at:
  1026 ;;		line 88 in file "4bit_mode_lcd.c"
  1027 ;; Parameters:    Size  Location     Type
  1028 ;;  cmd             1    wreg     unsigned char 
  1029 ;; Auto vars:     Size  Location     Type
  1030 ;;  cmd             1    2[COMMON] unsigned char 
  1031 ;; Return value:  Size  Location     Type
  1032 ;;                  1    wreg      void 
  1033 ;; Registers used:
  1034 ;;		wreg, status,2, status,0
  1035 ;; Tracked objects:
  1036 ;;		On entry : 0/0
  1037 ;;		On exit  : 0/0
  1038 ;;		Unchanged: 0/0
  1039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1040 ;;      Params:         0       0       0       0       0
  1041 ;;      Locals:         1       0       0       0       0
  1042 ;;      Temps:          2       0       0       0       0
  1043 ;;      Totals:         3       0       0       0       0
  1044 ;;Total ram usage:        3 bytes
  1045 ;; Hardware stack levels used:    1
  1046 ;; This function calls:
  1047 ;;		Nothing
  1048 ;; This function is called by:
  1049 ;;		_main
  1050 ;;		_LCD_Init
  1051 ;;		_LCD_String_xy
  1052 ;;		_LCD_Clear
  1053 ;; This function uses a non-reentrant model
  1054 ;;
  1055                           
  1056                           
  1057                           ;psect for function _LCD_Command
  1058  060C                     _LCD_Command:	
  1059                           
  1060                           ;incstack = 0
  1061                           ; Regs used in _LCD_Command: [wreg+status,2+status,0]
  1062                           ;LCD_Command@cmd stored from wreg
  1063  060C  00F2               	movwf	LCD_Command@cmd
  1064  060D                     l868:	
  1065  060D  30F0               	movlw	240
  1066  060E  0572               	andwf	LCD_Command@cmd,w
  1067  060F  00F0               	movwf	??_LCD_Command
  1068  0610  1283               	bcf	3,5	;RP0=0, select bank0
  1069  0611  1303               	bcf	3,6	;RP1=0, select bank0
  1070  0612  0808               	movf	8,w	;volatile
  1071  0613  390F               	andlw	15
  1072  0614  0470               	iorwf	??_LCD_Command,w
  1073  0615  0088               	movwf	8	;volatile
  1074  0616                     l870:	
  1075  0616  1006               	bcf	6,0	;volatile
  1076  0617                     l872:	
  1077  0617  1486               	bsf	6,1	;volatile
  1078  0618                     l874:	
  1079  0618  3007               	movlw	7
  1080  0619  00F1               	movwf	??_LCD_Command+1
  1081  061A  307D               	movlw	125
  1082  061B  00F0               	movwf	??_LCD_Command
  1083  061C                     u587:	
  1084  061C  0BF0               	decfsz	??_LCD_Command,f
  1085  061D  2E1C               	goto	u587
  1086  061E  0BF1               	decfsz	??_LCD_Command+1,f
  1087  061F  2E1C               	goto	u587
  1088  0620                     l876:	
  1089  0620  1283               	bcf	3,5	;RP0=0, select bank0
  1090  0621  1303               	bcf	3,6	;RP1=0, select bank0
  1091  0622  1086               	bcf	6,1	;volatile
  1092  0623                     l878:	
  1093  0623  3007               	movlw	7
  1094  0624  00F1               	movwf	??_LCD_Command+1
  1095  0625  307D               	movlw	125
  1096  0626  00F0               	movwf	??_LCD_Command
  1097  0627                     u597:	
  1098  0627  0BF0               	decfsz	??_LCD_Command,f
  1099  0628  2E27               	goto	u597
  1100  0629  0BF1               	decfsz	??_LCD_Command+1,f
  1101  062A  2E27               	goto	u597
  1102  062B  0872               	movf	LCD_Command@cmd,w
  1103  062C  00F0               	movwf	??_LCD_Command
  1104  062D  3004               	movlw	4
  1105  062E                     u295:	
  1106  062E  1003               	clrc
  1107  062F  0DF0               	rlf	??_LCD_Command,f
  1108  0630  3EFF               	addlw	-1
  1109  0631  1D03               	skipz
  1110  0632  2E2E               	goto	u295
  1111  0633  1283               	bcf	3,5	;RP0=0, select bank0
  1112  0634  1303               	bcf	3,6	;RP1=0, select bank0
  1113  0635  0808               	movf	8,w	;volatile
  1114  0636  390F               	andlw	15
  1115  0637  0470               	iorwf	??_LCD_Command,w
  1116  0638  0088               	movwf	8	;volatile
  1117  0639                     l880:	
  1118  0639  1486               	bsf	6,1	;volatile
  1119  063A                     l882:	
  1120  063A  3007               	movlw	7
  1121  063B  00F1               	movwf	??_LCD_Command+1
  1122  063C  307D               	movlw	125
  1123  063D  00F0               	movwf	??_LCD_Command
  1124  063E                     u607:	
  1125  063E  0BF0               	decfsz	??_LCD_Command,f
  1126  063F  2E3E               	goto	u607
  1127  0640  0BF1               	decfsz	??_LCD_Command+1,f
  1128  0641  2E3E               	goto	u607
  1129  0642                     l884:	
  1130  0642  1283               	bcf	3,5	;RP0=0, select bank0
  1131  0643  1303               	bcf	3,6	;RP1=0, select bank0
  1132  0644  1086               	bcf	6,1	;volatile
  1133  0645                     l886:	
  1134  0645  3007               	movlw	7
  1135  0646  00F1               	movwf	??_LCD_Command+1
  1136  0647  307D               	movlw	125
  1137  0648  00F0               	movwf	??_LCD_Command
  1138  0649                     u617:	
  1139  0649  0BF0               	decfsz	??_LCD_Command,f
  1140  064A  2E49               	goto	u617
  1141  064B  0BF1               	decfsz	??_LCD_Command+1,f
  1142  064C  2E49               	goto	u617
  1143  064D                     l47:	
  1144  064D  0008               	return
  1145  064E                     __end_of_LCD_Command:	
  1146                           
  1147                           	psect	text6
  1148  064E                     __ptext6:	
  1149 ;; *************** function _LCD_Char *****************
  1150 ;; Defined at:
  1151 ;;		line 103 in file "4bit_mode_lcd.c"
  1152 ;; Parameters:    Size  Location     Type
  1153 ;;  dat             1    wreg     unsigned char 
  1154 ;; Auto vars:     Size  Location     Type
  1155 ;;  dat             1    2[COMMON] unsigned char 
  1156 ;; Return value:  Size  Location     Type
  1157 ;;                  1    wreg      void 
  1158 ;; Registers used:
  1159 ;;		wreg, status,2, status,0
  1160 ;; Tracked objects:
  1161 ;;		On entry : 0/0
  1162 ;;		On exit  : 0/0
  1163 ;;		Unchanged: 0/0
  1164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1165 ;;      Params:         0       0       0       0       0
  1166 ;;      Locals:         1       0       0       0       0
  1167 ;;      Temps:          2       0       0       0       0
  1168 ;;      Totals:         3       0       0       0       0
  1169 ;;Total ram usage:        3 bytes
  1170 ;; Hardware stack levels used:    1
  1171 ;; This function calls:
  1172 ;;		Nothing
  1173 ;; This function is called by:
  1174 ;;		_main
  1175 ;;		_LCD_String
  1176 ;; This function uses a non-reentrant model
  1177 ;;
  1178                           
  1179                           
  1180                           ;psect for function _LCD_Char
  1181  064E                     _LCD_Char:	
  1182                           
  1183                           ;incstack = 0
  1184                           ; Regs used in _LCD_Char: [wreg+status,2+status,0]
  1185                           ;LCD_Char@dat stored from wreg
  1186  064E  00F2               	movwf	LCD_Char@dat
  1187  064F                     l914:	
  1188  064F  30F0               	movlw	240
  1189  0650  0572               	andwf	LCD_Char@dat,w
  1190  0651  00F0               	movwf	??_LCD_Char
  1191  0652  1283               	bcf	3,5	;RP0=0, select bank0
  1192  0653  1303               	bcf	3,6	;RP1=0, select bank0
  1193  0654  0808               	movf	8,w	;volatile
  1194  0655  390F               	andlw	15
  1195  0656  0470               	iorwf	??_LCD_Char,w
  1196  0657  0088               	movwf	8	;volatile
  1197  0658                     l916:	
  1198  0658  1406               	bsf	6,0	;volatile
  1199  0659                     l918:	
  1200  0659  1486               	bsf	6,1	;volatile
  1201  065A                     l920:	
  1202  065A  3041               	movlw	65
  1203  065B  00F1               	movwf	??_LCD_Char+1
  1204  065C  30EE               	movlw	238
  1205  065D  00F0               	movwf	??_LCD_Char
  1206  065E                     u627:	
  1207  065E  0BF0               	decfsz	??_LCD_Char,f
  1208  065F  2E5E               	goto	u627
  1209  0660  0BF1               	decfsz	??_LCD_Char+1,f
  1210  0661  2E5E               	goto	u627
  1211  0662  0000               	nop
  1212  0663                     l922:	
  1213  0663  1283               	bcf	3,5	;RP0=0, select bank0
  1214  0664  1303               	bcf	3,6	;RP1=0, select bank0
  1215  0665  1086               	bcf	6,1	;volatile
  1216  0666                     l924:	
  1217  0666  3041               	movlw	65
  1218  0667  00F1               	movwf	??_LCD_Char+1
  1219  0668  30EE               	movlw	238
  1220  0669  00F0               	movwf	??_LCD_Char
  1221  066A                     u637:	
  1222  066A  0BF0               	decfsz	??_LCD_Char,f
  1223  066B  2E6A               	goto	u637
  1224  066C  0BF1               	decfsz	??_LCD_Char+1,f
  1225  066D  2E6A               	goto	u637
  1226  066E  0000               	nop
  1227  066F  0872               	movf	LCD_Char@dat,w
  1228  0670  00F0               	movwf	??_LCD_Char
  1229  0671  3004               	movlw	4
  1230  0672                     u325:	
  1231  0672  1003               	clrc
  1232  0673  0DF0               	rlf	??_LCD_Char,f
  1233  0674  3EFF               	addlw	-1
  1234  0675  1D03               	skipz
  1235  0676  2E72               	goto	u325
  1236  0677  1283               	bcf	3,5	;RP0=0, select bank0
  1237  0678  1303               	bcf	3,6	;RP1=0, select bank0
  1238  0679  0808               	movf	8,w	;volatile
  1239  067A  390F               	andlw	15
  1240  067B  0470               	iorwf	??_LCD_Char,w
  1241  067C  0088               	movwf	8	;volatile
  1242  067D                     l926:	
  1243  067D  1486               	bsf	6,1	;volatile
  1244  067E                     l928:	
  1245  067E  3041               	movlw	65
  1246  067F  00F1               	movwf	??_LCD_Char+1
  1247  0680  30EE               	movlw	238
  1248  0681  00F0               	movwf	??_LCD_Char
  1249  0682                     u647:	
  1250  0682  0BF0               	decfsz	??_LCD_Char,f
  1251  0683  2E82               	goto	u647
  1252  0684  0BF1               	decfsz	??_LCD_Char+1,f
  1253  0685  2E82               	goto	u647
  1254  0686  0000               	nop
  1255  0687                     l930:	
  1256  0687  1283               	bcf	3,5	;RP0=0, select bank0
  1257  0688  1303               	bcf	3,6	;RP1=0, select bank0
  1258  0689  1086               	bcf	6,1	;volatile
  1259  068A                     l932:	
  1260  068A  3041               	movlw	65
  1261  068B  00F1               	movwf	??_LCD_Char+1
  1262  068C  30EE               	movlw	238
  1263  068D  00F0               	movwf	??_LCD_Char
  1264  068E                     u657:	
  1265  068E  0BF0               	decfsz	??_LCD_Char,f
  1266  068F  2E8E               	goto	u657
  1267  0690  0BF1               	decfsz	??_LCD_Char+1,f
  1268  0691  2E8E               	goto	u657
  1269  0692  0000               	nop
  1270  0693                     l50:	
  1271  0693  0008               	return
  1272  0694                     __end_of_LCD_Char:	
  1273  007E                     btemp	set	126	;btemp
  1274  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80      0       6
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___awdiv
    _LCD_Init->_MSdelay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1200
                                              9 COMMON     3     3      0
                           _LCD_Char
                        _LCD_Command
                           _LCD_Init
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0     212
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (2) _MSdelay                                              6     4      2     168
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Char                                             3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Char
   _LCD_Command
   _LCD_Init
     _LCD_Command
     _MSdelay
   ___awdiv
   ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      14       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       6       5        7.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      14      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Sep 27 22:18:41 2020

             __CFG_CP$ON 0000                        _i 007C             ?_LCD_Command 0070  
                     l50 0693                       l44 060B                       l47 064D  
                     l72 05E0                       l67 05D6              __CFG_CPD$ON 0000  
           ___awdiv@sign 0076                      l311 0753                      l324 06EC  
                    l900 05E1                      l910 05FF                      l902 05E4  
                    l920 065A                      l912 0605                      l904 05ED  
                    l930 0687                      l922 0663                      l914 064F  
                    l906 05F3                      l932 068A                      l924 0666  
                    l916 0658                      l908 05F9                      l926 067D  
                    l918 0659                      l870 0616                      l950 06F9  
                    l942 06ED                      l928 067E                      l880 0639  
                    l872 0617                      l960 070E                      l952 06FD  
                    l944 06EE                      l882 063A                      l874 0618  
                    l890 05BF                      l970 0731                      l962 0711  
                    l954 0702                      l946 06F2                      l884 0642  
                    l876 0620                      l868 060D                      l980 074A  
                    l972 0737                      l964 0718                      l956 0706  
                    l948 06F7                      l886 0645                      l878 0623  
                    l982 074F                      l974 0738                      l966 071C  
                    l958 0708                      l990 0699                      l896 05C1  
                    l888 05BC                      l976 073F                      l968 0720  
                    l992 069E                      l898 05D0                      l978 0745  
                    l994 06A0                      l986 0694                      l996 06A4  
                    l988 0695                      l998 06A9                      u300 05D0  
                    u301 05CF                      u310 05E0                      u311 05DF  
                    u400 0731                      u401 0730                      u315 05DC  
                    u420 0745                      u340 06F2                      u325 0672  
                    u421 0744                      u405 072D                      u341 06F1  
                    u430 074A                      u350 06FD                      u510 06DE  
                    u431 0749                      u415 0739                      u351 06FC  
                    u511 06DD                      u360 070E                      u520 06E3  
                    u440 0699                      u361 070D                      u521 06E2  
                    u505 06D2                      u441 0698                      u450 06A4  
                    u530 077E                      u451 06A3                      u531 077D  
                    u380 0720                      u460 06AF                      u540 0792  
                    u381 071F                      u461 06AE                      u541 0791  
                    u550 07C6                      u607 063E                      u295 062E  
                    u375 0712                      u551 07C5                      u535 077A  
                    u480 06C1                      u617 0649                      u481 06C0  
                    u545 078E                      u490 06CB                      u627 065E  
                    u395 0721                      u491 06CA                      u475 06B3  
                    u555 07C2                      u637 066A                      u647 0682  
                    u495 06C7                      u657 068E                      u577 0762  
                    u587 061C                      u597 0627             ___awmod@sign 0076  
           __CFG_FOSC$HS 0000             __CFG_LVP$OFF 0000              LCD_Char@dat 0072  
                   l1000 06AF                     l1010 06CB                     l1002 06B2  
                   l1020 06E8                     l1012 06D1                     l1004 06B9  
                   l1014 06D8                     l1006 06BD                     l1030 0769  
                   l1008 06C1                     l1016 06DE                     l1040 07B9  
                   l1032 0771                     l1024 0754                     l1018 06E3  
                   l1050 07E0                     l1042 07C6                     l1034 077E  
                   l1026 0757                     l1052 07E6                     l1044 07CE  
                   l1036 0785                     l1028 075C                     l1046 07D5  
                   l1038 0792                     l1048 07DA             __CFG_WRT$256 0000  
                   _mod1 0025                     _mod2 0024                     _main 0754  
                   btemp 007E                     start 0000          __end_of_MSdelay 05E1  
       __end_of_LCD_Char 0694         __end_of_LCD_Init 060C                    ?_main 0070  
        __end_of___awdiv 0754            __CFG_WDTE$OFF 0000          __end_of___awmod 06ED  
        ___awdiv@divisor 0070          ___awdiv@counter 0075                    _PORTD 0008  
                  _TRISB 0086                    _TRISD 0088           __CFG_BOREN$OFF 0000  
                  status 0003                    wtemp0 007E          __initialization 07F2  
           __end_of_main 07F2                   ??_main 0079         ___awdiv@dividend 0072  
              ??_MSdelay 0072           __CFG_PWRTE$OFF 0000                ??___awdiv 0074  
              ??___awmod 0074         ___awdiv@quotient 0077          ___awmod@divisor 0070  
        ___awmod@counter 0075     __size_of_LCD_Command 0042                ?_LCD_Char 0070  
__end_of__initialization 07FC                ?_LCD_Init 0070           __pcstackCOMMON 0070  
             __pbssBANK0 0020               ??_LCD_Char 0070               ??_LCD_Init 0076  
             __pmaintext 0754                  _MSdelay 05BC                  ___awdiv 06ED  
                ___awmod 0694                  _change1 0022                  _change2 0020  
                __ptext1 0694                  __ptext2 06ED                  __ptext3 05E1  
                __ptext4 05BC                  __ptext5 060C                  __ptext6 064E  
       ___awmod@dividend 0072     end_of_initialization 07FC           LCD_Command@cmd 0072  
              _PORTBbits 0006        __size_of_LCD_Char 0046        __size_of_LCD_Init 002B  
          ??_LCD_Command 0070      start_initialization 07F2      __end_of_LCD_Command 064E  
            __pbssCOMMON 007C                ___latbits 0002                 ?_MSdelay 0070  
               ?___awdiv 0070                 ?___awmod 0070                 MSdelay@i 0072  
               MSdelay@j 0074                 _LCD_Char 064E                 _LCD_Init 05E1  
            _LCD_Command 060C         __size_of_MSdelay 0025         __size_of___awdiv 0067  
       __size_of___awmod 0059            __size_of_main 009E               MSdelay@val 0070  
