

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Jan 04 01:28:37 2021

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.10
    22                           ; Generated 31/07/2019 GMT
    23                           ; 
    24                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F877A Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009C                     	;# 
   106  009D                     	;# 
   107  009E                     	;# 
   108  009F                     	;# 
   109  010C                     	;# 
   110  010D                     	;# 
   111  010E                     	;# 
   112  010F                     	;# 
   113  018C                     	;# 
   114  018D                     	;# 
   115  0000                     	;# 
   116  0001                     	;# 
   117  0002                     	;# 
   118  0003                     	;# 
   119  0004                     	;# 
   120  0005                     	;# 
   121  0006                     	;# 
   122  0007                     	;# 
   123  0008                     	;# 
   124  0009                     	;# 
   125  000A                     	;# 
   126  000B                     	;# 
   127  000C                     	;# 
   128  000D                     	;# 
   129  000E                     	;# 
   130  000E                     	;# 
   131  000F                     	;# 
   132  0010                     	;# 
   133  0011                     	;# 
   134  0012                     	;# 
   135  0013                     	;# 
   136  0014                     	;# 
   137  0015                     	;# 
   138  0015                     	;# 
   139  0016                     	;# 
   140  0017                     	;# 
   141  0018                     	;# 
   142  0019                     	;# 
   143  001A                     	;# 
   144  001B                     	;# 
   145  001B                     	;# 
   146  001C                     	;# 
   147  001D                     	;# 
   148  001E                     	;# 
   149  001F                     	;# 
   150  0081                     	;# 
   151  0085                     	;# 
   152  0086                     	;# 
   153  0087                     	;# 
   154  0088                     	;# 
   155  0089                     	;# 
   156  008C                     	;# 
   157  008D                     	;# 
   158  008E                     	;# 
   159  0091                     	;# 
   160  0092                     	;# 
   161  0093                     	;# 
   162  0094                     	;# 
   163  0098                     	;# 
   164  0099                     	;# 
   165  009C                     	;# 
   166  009D                     	;# 
   167  009E                     	;# 
   168  009F                     	;# 
   169  010C                     	;# 
   170  010D                     	;# 
   171  010E                     	;# 
   172  010F                     	;# 
   173  018C                     	;# 
   174  018D                     	;# 
   175                           
   176                           	psect	strings
   177  0200                     __pstrings:	
   178  0200                     stringtab:	
   179  0200                     __stringtab:	
   180  0200                     stringcode:	
   181                           ;	String table - string pointers are 1 byte each
   182                           
   183  0200                     stringdir:	
   184  0200  3002               	movlw	high stringdir
   185  0201  008A               	movwf	10
   186  0202  0804               	movf	4,w
   187  0203  0A84               	incf	4,f
   188  0204  0782               	addwf	2,f
   189  0205                     __stringbase:	
   190  0205  3400               	retlw	0
   191  0206                     __end_of__stringtab:	
   192  0206                     _dpowers:	
   193  0206  3401               	retlw	1
   194  0207  3400               	retlw	0
   195  0208  340A               	retlw	10
   196  0209  3400               	retlw	0
   197  020A  3464               	retlw	100
   198  020B  3400               	retlw	0
   199  020C  34E8               	retlw	232
   200  020D  3403               	retlw	3
   201  020E  3410               	retlw	16
   202  020F  3427               	retlw	39
   203  0210                     __end_of_dpowers:	
   204  0019                     _TXREG	set	25
   205  0018                     _RCSTA	set	24
   206  000B                     _INTCONbits	set	11
   207  0006                     _PORTB	set	6
   208  0006                     _PORTBbits	set	6
   209  0099                     _SPBRG	set	153
   210  0098                     _TXSTAbits	set	152
   211  0087                     _TRISCbits	set	135
   212  0081                     _OPTION_REGbits	set	129
   213  0086                     _TRISBbits	set	134
   214  04C1                     _TRMT	set	1217
   215  04C5                     _TXEN	set	1221
   216  04C2                     _BRGH	set	1218
   217  04C4                     _SYNC	set	1220
   218  0210                     STR_1:	
   219  0210  3425               	retlw	37	;'%'
   220  0211  3464               	retlw	100	;'d'
   221  0212  3420               	retlw	32	;' '
   222  0213  340A               	retlw	10
   223  0214  3400               	retlw	0
   224  0215                     STR_2:	
   225  0215  340D               	retlw	13
   226  0216  3400               	retlw	0
   227                           
   228                           ; #config settings
   229  0000                     
   230                           	psect	cinit
   231  000F                     start_initialization:	
   232  000F                     __initialization:	
   233                           
   234                           ; Clear objects allocated to COMMON
   235  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   236                           
   237                           ; Clear objects allocated to BANK0
   238  0010  1283               	bcf	3,5	;RP0=0, select bank0
   239  0011  1303               	bcf	3,6	;RP1=0, select bank0
   240  0012  01BA               	clrf	__pbssBANK0& (0+127)
   241  0013  01BB               	clrf	(__pbssBANK0+1)& (0+127)
   242  0014                     end_of_initialization:	
   243                           ;End of C runtime variable initialization code
   244                           
   245  0014                     __end_of__initialization:	
   246  0014  0183               	clrf	3
   247  0015  120A  118A  29B2   	ljmp	_main	;jump to C main() function
   248                           
   249                           	psect	bssCOMMON
   250  0077                     __pbssCOMMON:	
   251  0077                     pbchange@oldstate:	
   252  0077                     	ds	1
   253                           
   254                           	psect	bssBANK0
   255  003A                     __pbssBANK0:	
   256  003A                     _count:	
   257  003A                     	ds	2
   258                           
   259                           	psect	cstackCOMMON
   260  0070                     __pcstackCOMMON:	
   261  0070                     ?_UART_config:	
   262  0070                     ?_pbchange:	
   263                           ; 1 bytes @ 0x0
   264                           
   265  0070                     ??_pbchange:	
   266                           ; 1 bytes @ 0x0
   267                           
   268  0070                     ?_isr:	
   269                           ; 1 bytes @ 0x0
   270                           
   271  0070                     ?_main:	
   272                           ; 1 bytes @ 0x0
   273                           
   274  0070                     ?_putch:	
   275                           ; 1 bytes @ 0x0
   276                           
   277                           
   278                           ; 1 bytes @ 0x0
   279  0070                     	ds	4
   280  0074                     pbchange@state:	
   281                           
   282                           ; 1 bytes @ 0x4
   283  0074                     	ds	1
   284  0075                     ??_isr:	
   285                           
   286                           ; 1 bytes @ 0x5
   287  0075                     	ds	2
   288                           
   289                           	psect	cstackBANK0
   290  0020                     __pcstackBANK0:	
   291  0020                     ??_UART_config:	
   292  0020                     ??_putch:	
   293                           ; 1 bytes @ 0x0
   294                           
   295  0020                     ?___lwdiv:	
   296                           ; 1 bytes @ 0x0
   297                           
   298  0020                     ___lwdiv@divisor:	
   299                           ; 2 bytes @ 0x0
   300                           
   301                           
   302                           ; 2 bytes @ 0x0
   303  0020                     	ds	2
   304  0022                     putch@data:	
   305  0022                     ___lwdiv@dividend:	
   306                           ; 1 bytes @ 0x2
   307                           
   308                           
   309                           ; 2 bytes @ 0x2
   310  0022                     	ds	2
   311  0024                     ??___lwdiv:	
   312                           
   313                           ; 1 bytes @ 0x4
   314  0024                     	ds	1
   315  0025                     ___lwdiv@quotient:	
   316                           
   317                           ; 2 bytes @ 0x5
   318  0025                     	ds	2
   319  0027                     ___lwdiv@counter:	
   320                           
   321                           ; 1 bytes @ 0x7
   322  0027                     	ds	1
   323  0028                     ?___lwmod:	
   324  0028                     ___lwmod@divisor:	
   325                           ; 2 bytes @ 0x8
   326                           
   327                           
   328                           ; 2 bytes @ 0x8
   329  0028                     	ds	2
   330  002A                     ___lwmod@dividend:	
   331                           
   332                           ; 2 bytes @ 0xA
   333  002A                     	ds	2
   334  002C                     ??___lwmod:	
   335                           
   336                           ; 1 bytes @ 0xC
   337  002C                     	ds	1
   338  002D                     ___lwmod@counter:	
   339                           
   340                           ; 1 bytes @ 0xD
   341  002D                     	ds	1
   342  002E                     ?_printf:	
   343                           
   344                           ; 2 bytes @ 0xE
   345  002E                     	ds	2
   346  0030                     ??_printf:	
   347                           
   348                           ; 1 bytes @ 0x10
   349  0030                     	ds	3
   350  0033                     printf@ap:	
   351                           
   352                           ; 1 bytes @ 0x13
   353  0033                     	ds	1
   354  0034                     printf@flag:	
   355                           
   356                           ; 1 bytes @ 0x14
   357  0034                     	ds	1
   358  0035                     printf@prec:	
   359                           
   360                           ; 1 bytes @ 0x15
   361  0035                     	ds	1
   362  0036                     printf@f:	
   363                           
   364                           ; 1 bytes @ 0x16
   365  0036                     	ds	1
   366  0037                     printf@val:	
   367                           
   368                           ; 2 bytes @ 0x17
   369  0037                     	ds	2
   370  0039                     printf@c:	
   371                           
   372                           ; 1 bytes @ 0x19
   373  0039                     	ds	1
   374  003A                     ??_main:	
   375                           
   376                           	psect	maintext
   377  01B2                     __pmaintext:	
   378                           ; 1 bytes @ 0x1A
   379 ;;
   380 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   381 ;;
   382 ;; *************** function _main *****************
   383 ;; Defined at:
   384 ;;		line 57 in file "main.c"
   385 ;; Parameters:    Size  Location     Type
   386 ;;		None
   387 ;; Auto vars:     Size  Location     Type
   388 ;;		None
   389 ;; Return value:  Size  Location     Type
   390 ;;                  1    wreg      void 
   391 ;; Registers used:
   392 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   393 ;; Tracked objects:
   394 ;;		On entry : B00/0
   395 ;;		On exit  : 0/0
   396 ;;		Unchanged: 0/0
   397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   398 ;;      Params:         0       0       0       0       0
   399 ;;      Locals:         0       0       0       0       0
   400 ;;      Temps:          0       0       0       0       0
   401 ;;      Totals:         0       0       0       0       0
   402 ;;Total ram usage:        0 bytes
   403 ;; Hardware stack levels required when called:    4
   404 ;; This function calls:
   405 ;;		_UART_config
   406 ;;		_printf
   407 ;; This function is called by:
   408 ;;		Startup code after reset
   409 ;; This function uses a non-reentrant model
   410 ;;
   411                           
   412                           
   413                           ;psect for function _main
   414  01B2                     _main:	
   415  01B2                     l1012:	
   416                           ;incstack = 0
   417                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   418                           
   419                           
   420                           ;main.c: 58: TRISBbits.TRISB4=1;
   421  01B2  1683               	bsf	3,5	;RP0=1, select bank1
   422  01B3  1303               	bcf	3,6	;RP1=0, select bank1
   423  01B4  1606               	bsf	6,4	;volatile
   424                           
   425                           ;main.c: 59: TRISBbits.TRISB5=1;
   426  01B5  1686               	bsf	6,5	;volatile
   427                           
   428                           ;main.c: 60: OPTION_REGbits.nRBPU =0;
   429  01B6  1381               	bcf	1,7	;volatile
   430                           
   431                           ;main.c: 61: INTCONbits.RBIF = 0;
   432  01B7  100B               	bcf	11,0	;volatile
   433                           
   434                           ;main.c: 62: INTCONbits.RBIE = 1;
   435  01B8  158B               	bsf	11,3	;volatile
   436                           
   437                           ;main.c: 63: INTCONbits.GIE = 1;
   438  01B9  178B               	bsf	11,7	;volatile
   439                           
   440                           ;main.c: 64: INTCONbits.PEIE=1;
   441  01BA  170B               	bsf	11,6	;volatile
   442  01BB                     l1014:	
   443                           
   444                           ;main.c: 65: UART_config();
   445  01BB  120A  118A  2217  120A  118A  	fcall	_UART_config
   446  01C0                     l1016:	
   447                           
   448                           ;main.c: 67: {;main.c: 69: printf("%d \n",count);
   449  01C0  1283               	bcf	3,5	;RP0=0, select bank0
   450  01C1  1303               	bcf	3,6	;RP1=0, select bank0
   451  01C2  083B               	movf	_count+1,w
   452  01C3  00AF               	movwf	?_printf+1
   453  01C4  083A               	movf	_count,w
   454  01C5  00AE               	movwf	?_printf
   455  01C6  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   456  01C7  120A  118A  2018  120A  118A  	fcall	_printf
   457  01CC                     l1018:	
   458                           
   459                           ;main.c: 70: printf("\r");
   460  01CC  3010               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   461  01CD  120A  118A  2018  120A  118A  	fcall	_printf
   462  01D2  29C0               	goto	l1016
   463  01D3  120A  118A  280C   	ljmp	start
   464  01D6                     __end_of_main:	
   465                           
   466                           	psect	text1
   467  0018                     __ptext1:	
   468 ;; *************** function _printf *****************
   469 ;; Defined at:
   470 ;;		line 477 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
   471 ;; Parameters:    Size  Location     Type
   472 ;;  f               1    wreg     PTR const unsigned char 
   473 ;;		 -> STR_2(2), STR_1(5), 
   474 ;; Auto vars:     Size  Location     Type
   475 ;;  f               1   22[BANK0 ] PTR const unsigned char 
   476 ;;		 -> STR_2(2), STR_1(5), 
   477 ;;  tmpval          4    0        struct .
   478 ;;  val             2   23[BANK0 ] unsigned int 
   479 ;;  cp              2    0        PTR const unsigned char 
   480 ;;  len             2    0        unsigned int 
   481 ;;  c               1   25[BANK0 ] unsigned char 
   482 ;;  prec            1   21[BANK0 ] char 
   483 ;;  flag            1   20[BANK0 ] unsigned char 
   484 ;;  ap              1   19[BANK0 ] PTR void [1]
   485 ;;		 -> ?_printf(2), 
   486 ;; Return value:  Size  Location     Type
   487 ;;                  2   14[BANK0 ] int 
   488 ;; Registers used:
   489 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   490 ;; Tracked objects:
   491 ;;		On entry : 0/0
   492 ;;		On exit  : 0/0
   493 ;;		Unchanged: 0/0
   494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   495 ;;      Params:         0       2       0       0       0
   496 ;;      Locals:         0       7       0       0       0
   497 ;;      Temps:          0       3       0       0       0
   498 ;;      Totals:         0      12       0       0       0
   499 ;;Total ram usage:       12 bytes
   500 ;; Hardware stack levels used:    1
   501 ;; Hardware stack levels required when called:    3
   502 ;; This function calls:
   503 ;;		___lwdiv
   504 ;;		___lwmod
   505 ;;		_putch
   506 ;; This function is called by:
   507 ;;		_main
   508 ;; This function uses a non-reentrant model
   509 ;;
   510                           
   511                           
   512                           ;psect for function _printf
   513  0018                     _printf:	
   514                           
   515                           ;incstack = 0
   516                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   517                           ;printf@f stored from wreg
   518  0018  1283               	bcf	3,5	;RP0=0, select bank0
   519  0019  1303               	bcf	3,6	;RP1=0, select bank0
   520  001A  00B6               	movwf	printf@f
   521  001B                     l922:	
   522                           
   523                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 477: printf
      +                          (const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\
      +                          doprnt.c: 478: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprn
      +                          t.c: 479:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common
      +                          \doprnt.c: 512:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\comm
      +                          on\doprnt.c: 521:  signed char prec;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c90\common\doprnt.c: 525:  unsigned char flag;
   524  001B  302E               	movlw	(low (?_printf| 0))& (0+255)
   525  001C  00B0               	movwf	??_printf
   526  001D  0830               	movf	??_printf,w
   527  001E  00B3               	movwf	printf@ap
   528                           
   529                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
   530  001F  28E0               	goto	l968
   531  0020                     l924:	
   532                           
   533                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 555:   if(c
      +                           != '%')
   534  0020  3025               	movlw	37
   535  0021  0639               	xorwf	printf@c,w
   536  0022  1903               	btfsc	3,2
   537  0023  2825               	goto	u431
   538  0024  2826               	goto	u430
   539  0025                     u431:	
   540  0025  282D               	goto	l928
   541  0026                     u430:	
   542  0026                     l926:	
   543                           
   544                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 557:   {;C:
      +                          \Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 558:    (putch
      +                          (c) );
   545  0026  0839               	movf	printf@c,w
   546  0027  120A  118A  21D6  120A  118A  	fcall	_putch
   547                           
   548                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 559:    con
      +                          tinue;
   549  002C  28E0               	goto	l968
   550  002D                     l928:	
   551                           
   552                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 565:   flag
      +                           = 0;
   553  002D  01B4               	clrf	printf@flag
   554  002E                     l932:	
   555                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 661:   swit
      +                          ch(c = *f++) {
   556                           
   557  002E  3001               	movlw	1
   558  002F  07B6               	addwf	printf@f,f
   559  0030  30FF               	movlw	-1
   560  0031  0736               	addwf	printf@f,w
   561  0032  0084               	movwf	4
   562  0033  120A  118A  2200  120A  118A  	fcall	stringdir
   563  0038  00B9               	movwf	printf@c
   564  0039  00B0               	movwf	??_printf
   565  003A  01B1               	clrf	??_printf+1
   566                           
   567                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   568                           ; Switch size 1, requested type "simple"
   569                           ; Number of cases is 1, Range of values is 0 to 0
   570                           ; switch strategies available:
   571                           ; Name         Instructions Cycles
   572                           ; simple_byte            4     3 (average)
   573                           ; direct_byte           11     8 (fixed)
   574                           ; jumptable            260     6 (fixed)
   575                           ;	Chosen strategy is simple_byte
   576  003B  0831               	movf	??_printf+1,w
   577  003C  3A00               	xorlw	0	; case 0
   578  003D  1903               	skipnz
   579  003E  2840               	goto	l1040
   580  003F  28E0               	goto	l968
   581  0040                     l1040:	
   582                           
   583                           ; Switch size 1, requested type "simple"
   584                           ; Number of cases is 3, Range of values is 0 to 105
   585                           ; switch strategies available:
   586                           ; Name         Instructions Cycles
   587                           ; simple_byte           10     6 (average)
   588                           ; jumptable            260     6 (fixed)
   589                           ;	Chosen strategy is simple_byte
   590  0040  0830               	movf	??_printf,w
   591  0041  3A00               	xorlw	0	; case 0
   592  0042  1903               	skipnz
   593  0043  28F4               	goto	l180
   594  0044  3A64               	xorlw	100	; case 100
   595  0045  1903               	skipnz
   596  0046  284B               	goto	l934
   597  0047  3A0D               	xorlw	13	; case 105
   598  0048  1903               	skipnz
   599  0049  284B               	goto	l934
   600  004A  28E0               	goto	l968
   601  004B                     l934:	
   602                           
   603                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1279:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1285:     val
      +                           = (unsigned int)(*(int *)__va_arg((*(int **)ap), (int)0));
   604  004B  0833               	movf	printf@ap,w
   605  004C  0084               	movwf	4
   606  004D  1383               	bcf	3,7	;select IRP bank0
   607  004E  0800               	movf	0,w
   608  004F  00B7               	movwf	printf@val
   609  0050  0A84               	incf	4,f
   610  0051  0800               	movf	0,w
   611  0052  00B8               	movwf	printf@val+1
   612  0053                     l936:	
   613  0053  3002               	movlw	2
   614  0054  00B0               	movwf	??_printf
   615  0055  0830               	movf	??_printf,w
   616  0056  07B3               	addwf	printf@ap,f
   617  0057                     l938:	
   618                           
   619                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1287:    if
      +                          ((int)val < 0) {
   620  0057  1FB8               	btfss	printf@val+1,7
   621  0058  285A               	goto	u441
   622  0059  285B               	goto	u440
   623  005A                     u441:	
   624  005A  2864               	goto	l944
   625  005B                     u440:	
   626  005B                     l940:	
   627                           
   628                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1288:     f
      +                          lag |= 0x03;
   629  005B  3003               	movlw	3
   630  005C  00B0               	movwf	??_printf
   631  005D  0830               	movf	??_printf,w
   632  005E  04B4               	iorwf	printf@flag,f
   633  005F                     l942:	
   634                           
   635                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1289:     v
      +                          al = -val;
   636  005F  09B7               	comf	printf@val,f
   637  0060  09B8               	comf	printf@val+1,f
   638  0061  0AB7               	incf	printf@val,f
   639  0062  1903               	skipnz
   640  0063  0AB8               	incf	printf@val+1,f
   641  0064                     l944:	
   642                           
   643                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1292:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1331:    for(
      +                          c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
   644  0064  01B9               	clrf	printf@c
   645  0065  0AB9               	incf	printf@c,f
   646  0066                     l950:	
   647                           
   648                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1332:     i
      +                          f(val < dpowers[c])
   649  0066  0839               	movf	printf@c,w
   650  0067  00B0               	movwf	??_printf
   651  0068  0730               	addwf	??_printf,w
   652  0069  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
   653  006A  0084               	movwf	4
   654  006B  120A  118A  2200  120A  118A  	fcall	stringdir
   655  0070  00B1               	movwf	??_printf+1
   656  0071  120A  118A  2200  120A  118A  	fcall	stringdir
   657  0076  00B2               	movwf	??_printf+2
   658  0077  0832               	movf	??_printf+2,w
   659  0078  0238               	subwf	printf@val+1,w
   660  0079  1D03               	skipz
   661  007A  287D               	goto	u455
   662  007B  0831               	movf	??_printf+1,w
   663  007C  0237               	subwf	printf@val,w
   664  007D                     u455:	
   665  007D  1803               	skipnc
   666  007E  2880               	goto	u451
   667  007F  2881               	goto	u450
   668  0080                     u451:	
   669  0080  2882               	goto	l954
   670  0081                     u450:	
   671  0081  288C               	goto	l956
   672  0082                     l954:	
   673  0082  3001               	movlw	1
   674  0083  00B0               	movwf	??_printf
   675  0084  0830               	movf	??_printf,w
   676  0085  07B9               	addwf	printf@c,f
   677  0086  3005               	movlw	5
   678  0087  0639               	xorwf	printf@c,w
   679  0088  1D03               	btfss	3,2
   680  0089  288B               	goto	u461
   681  008A  288C               	goto	u460
   682  008B                     u461:	
   683  008B  2866               	goto	l950
   684  008C                     u460:	
   685  008C                     l956:	
   686                           
   687                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1448:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1464:    if(f
      +                          lag & 0x03)
   688  008C  0834               	movf	printf@flag,w
   689  008D  3903               	andlw	3
   690  008E  1903               	btfsc	3,2
   691  008F  2891               	goto	u471
   692  0090  2892               	goto	u470
   693  0091                     u471:	
   694  0091  2898               	goto	l960
   695  0092                     u470:	
   696  0092                     l958:	
   697                           
   698                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1465:     (
      +                          putch('-') );
   699  0092  302D               	movlw	45
   700  0093  120A  118A  21D6  120A  118A  	fcall	_putch
   701  0098                     l960:	
   702                           
   703                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1495:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1498:   prec 
      +                          = c;
   704  0098  1283               	bcf	3,5	;RP0=0, select bank0
   705  0099  1303               	bcf	3,6	;RP1=0, select bank0
   706  009A  0839               	movf	printf@c,w
   707  009B  00B0               	movwf	??_printf
   708  009C  0830               	movf	??_printf,w
   709  009D  00B5               	movwf	printf@prec
   710                           
   711                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1500:   whi
      +                          le(prec--) {
   712  009E  28D5               	goto	l966
   713  009F                     l962:	
   714                           
   715                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1504:    {;
      +                          C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1515:     c 
      +                          = (val / dpowers[(unsigned char)prec]) % 10 + '0';
   716  009F  300A               	movlw	10
   717  00A0  00A8               	movwf	___lwmod@divisor
   718  00A1  3000               	movlw	0
   719  00A2  00A9               	movwf	___lwmod@divisor+1
   720  00A3  0835               	movf	printf@prec,w
   721  00A4  00B0               	movwf	??_printf
   722  00A5  0730               	addwf	??_printf,w
   723  00A6  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
   724  00A7  0084               	movwf	4
   725  00A8  120A  118A  2200  120A  118A  	fcall	stringdir
   726  00AD  00A0               	movwf	___lwdiv@divisor
   727  00AE  120A  118A  2200  120A  118A  	fcall	stringdir
   728  00B3  00A1               	movwf	___lwdiv@divisor+1
   729  00B4  0838               	movf	printf@val+1,w
   730  00B5  00A3               	movwf	___lwdiv@dividend+1
   731  00B6  0837               	movf	printf@val,w
   732  00B7  00A2               	movwf	___lwdiv@dividend
   733  00B8  120A  118A  20F5  120A  118A  	fcall	___lwdiv
   734  00BD  1283               	bcf	3,5	;RP0=0, select bank0
   735  00BE  1303               	bcf	3,6	;RP1=0, select bank0
   736  00BF  0821               	movf	?___lwdiv+1,w
   737  00C0  00AB               	movwf	___lwmod@dividend+1
   738  00C1  0820               	movf	?___lwdiv,w
   739  00C2  00AA               	movwf	___lwmod@dividend
   740  00C3  120A  118A  213B  120A  118A  	fcall	___lwmod
   741  00C8  1283               	bcf	3,5	;RP0=0, select bank0
   742  00C9  1303               	bcf	3,6	;RP1=0, select bank0
   743  00CA  0828               	movf	?___lwmod,w
   744  00CB  3E30               	addlw	48
   745  00CC  00B1               	movwf	??_printf+1
   746  00CD  0831               	movf	??_printf+1,w
   747  00CE  00B9               	movwf	printf@c
   748  00CF                     l964:	
   749                           
   750                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1549:    };
      +                          C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1550:    (pu
      +                          tch(c) );
   751  00CF  0839               	movf	printf@c,w
   752  00D0  120A  118A  21D6  120A  118A  	fcall	_putch
   753  00D5                     l966:	
   754                           
   755                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1500:   whi
      +                          le(prec--) {
   756  00D5  30FF               	movlw	255
   757  00D6  1283               	bcf	3,5	;RP0=0, select bank0
   758  00D7  1303               	bcf	3,6	;RP1=0, select bank0
   759  00D8  00B0               	movwf	??_printf
   760  00D9  0830               	movf	??_printf,w
   761  00DA  07B5               	addwf	printf@prec,f
   762  00DB  0A35               	incf	printf@prec,w
   763  00DC  1D03               	btfss	3,2
   764  00DD  28DF               	goto	u481
   765  00DE  28E0               	goto	u480
   766  00DF                     u481:	
   767  00DF  289F               	goto	l962
   768  00E0                     u480:	
   769  00E0                     l968:	
   770                           
   771                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
   772  00E0  3001               	movlw	1
   773  00E1  1283               	bcf	3,5	;RP0=0, select bank0
   774  00E2  1303               	bcf	3,6	;RP1=0, select bank0
   775  00E3  07B6               	addwf	printf@f,f
   776  00E4  30FF               	movlw	-1
   777  00E5  0736               	addwf	printf@f,w
   778  00E6  0084               	movwf	4
   779  00E7  120A  118A  2200  120A  118A  	fcall	stringdir
   780  00EC  00B0               	movwf	??_printf
   781  00ED  0830               	movf	??_printf,w
   782  00EE  00B9               	movwf	printf@c
   783  00EF  0839               	movf	printf@c,w
   784  00F0  1D03               	btfss	3,2
   785  00F1  28F3               	goto	u491
   786  00F2  28F4               	goto	u490
   787  00F3                     u491:	
   788  00F3  2820               	goto	l924
   789  00F4                     u490:	
   790  00F4                     l180:	
   791  00F4  0008               	return
   792  00F5                     __end_of_printf:	
   793                           
   794                           	psect	text2
   795  01D6                     __ptext2:	
   796 ;; *************** function _putch *****************
   797 ;; Defined at:
   798 ;;		line 84 in file "main.c"
   799 ;; Parameters:    Size  Location     Type
   800 ;;  data            1    wreg     unsigned char 
   801 ;; Auto vars:     Size  Location     Type
   802 ;;  data            1    2[BANK0 ] unsigned char 
   803 ;; Return value:  Size  Location     Type
   804 ;;                  1    wreg      void 
   805 ;; Registers used:
   806 ;;		wreg
   807 ;; Tracked objects:
   808 ;;		On entry : 0/0
   809 ;;		On exit  : 0/0
   810 ;;		Unchanged: 0/0
   811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   812 ;;      Params:         0       0       0       0       0
   813 ;;      Locals:         0       1       0       0       0
   814 ;;      Temps:          0       2       0       0       0
   815 ;;      Totals:         0       3       0       0       0
   816 ;;Total ram usage:        3 bytes
   817 ;; Hardware stack levels used:    1
   818 ;; Hardware stack levels required when called:    2
   819 ;; This function calls:
   820 ;;		Nothing
   821 ;; This function is called by:
   822 ;;		_printf
   823 ;; This function uses a non-reentrant model
   824 ;;
   825                           
   826                           
   827                           ;psect for function _putch
   828  01D6                     _putch:	
   829                           
   830                           ;incstack = 0
   831                           ; Regs used in _putch: [wreg]
   832                           ;putch@data stored from wreg
   833  01D6  1283               	bcf	3,5	;RP0=0, select bank0
   834  01D7  1303               	bcf	3,6	;RP1=0, select bank0
   835  01D8  00A2               	movwf	putch@data
   836  01D9                     l848:	
   837  01D9                     l65:	
   838                           ;main.c: 85:   while(!TRMT);
   839                           
   840  01D9  1683               	bsf	3,5	;RP0=1, select bank1
   841  01DA  1303               	bcf	3,6	;RP1=0, select bank1
   842  01DB  1C98               	btfss	24,1	;volatile
   843  01DC  29DE               	goto	u261
   844  01DD  29DF               	goto	u260
   845  01DE                     u261:	
   846  01DE  29D9               	goto	l65
   847  01DF                     u260:	
   848  01DF                     l850:	
   849                           
   850                           ;main.c: 86:   TXREG = data;
   851  01DF  1283               	bcf	3,5	;RP0=0, select bank0
   852  01E0  1303               	bcf	3,6	;RP1=0, select bank0
   853  01E1  0822               	movf	putch@data,w
   854  01E2  0099               	movwf	25	;volatile
   855                           
   856                           ;main.c: 87:   _delay((unsigned long)((2)*(4000000/4000.0)));
   857  01E3  3003               	movlw	3
   858  01E4  1283               	bcf	3,5	;RP0=0, select bank0
   859  01E5  1303               	bcf	3,6	;RP1=0, select bank0
   860  01E6  00A1               	movwf	??_putch+1
   861  01E7  3097               	movlw	151
   862  01E8  00A0               	movwf	??_putch
   863  01E9                     u517:	
   864  01E9  0BA0               	decfsz	??_putch,f
   865  01EA  29E9               	goto	u517
   866  01EB  0BA1               	decfsz	??_putch+1,f
   867  01EC  29E9               	goto	u517
   868  01ED                     l68:	
   869  01ED  0008               	return
   870  01EE                     __end_of_putch:	
   871                           
   872                           	psect	text3
   873  013B                     __ptext3:	
   874 ;; *************** function ___lwmod *****************
   875 ;; Defined at:
   876 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
   877 ;; Parameters:    Size  Location     Type
   878 ;;  divisor         2    8[BANK0 ] unsigned int 
   879 ;;  dividend        2   10[BANK0 ] unsigned int 
   880 ;; Auto vars:     Size  Location     Type
   881 ;;  counter         1   13[BANK0 ] unsigned char 
   882 ;; Return value:  Size  Location     Type
   883 ;;                  2    8[BANK0 ] unsigned int 
   884 ;; Registers used:
   885 ;;		wreg, status,2, status,0
   886 ;; Tracked objects:
   887 ;;		On entry : 0/0
   888 ;;		On exit  : 0/0
   889 ;;		Unchanged: 0/0
   890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   891 ;;      Params:         0       4       0       0       0
   892 ;;      Locals:         0       1       0       0       0
   893 ;;      Temps:          0       1       0       0       0
   894 ;;      Totals:         0       6       0       0       0
   895 ;;Total ram usage:        6 bytes
   896 ;; Hardware stack levels used:    1
   897 ;; Hardware stack levels required when called:    2
   898 ;; This function calls:
   899 ;;		Nothing
   900 ;; This function is called by:
   901 ;;		_printf
   902 ;; This function uses a non-reentrant model
   903 ;;
   904                           
   905                           
   906                           ;psect for function ___lwmod
   907  013B                     ___lwmod:	
   908  013B                     l878:	
   909                           ;incstack = 0
   910                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
   911                           
   912  013B  1283               	bcf	3,5	;RP0=0, select bank0
   913  013C  1303               	bcf	3,6	;RP1=0, select bank0
   914  013D  0828               	movf	___lwmod@divisor,w
   915  013E  0429               	iorwf	___lwmod@divisor+1,w
   916  013F  1903               	btfsc	3,2
   917  0140  2942               	goto	u341
   918  0141  2943               	goto	u340
   919  0142                     u341:	
   920  0142  2972               	goto	l896
   921  0143                     u340:	
   922  0143                     l880:	
   923  0143  01AD               	clrf	___lwmod@counter
   924  0144  0AAD               	incf	___lwmod@counter,f
   925  0145  2951               	goto	l886
   926  0146                     l882:	
   927  0146  3001               	movlw	1
   928  0147                     u355:	
   929  0147  1003               	clrc
   930  0148  0DA8               	rlf	___lwmod@divisor,f
   931  0149  0DA9               	rlf	___lwmod@divisor+1,f
   932  014A  3EFF               	addlw	-1
   933  014B  1D03               	skipz
   934  014C  2947               	goto	u355
   935  014D                     l884:	
   936  014D  3001               	movlw	1
   937  014E  00AC               	movwf	??___lwmod
   938  014F  082C               	movf	??___lwmod,w
   939  0150  07AD               	addwf	___lwmod@counter,f
   940  0151                     l886:	
   941  0151  1FA9               	btfss	___lwmod@divisor+1,7
   942  0152  2954               	goto	u361
   943  0153  2955               	goto	u360
   944  0154                     u361:	
   945  0154  2946               	goto	l882
   946  0155                     u360:	
   947  0155                     l888:	
   948  0155  0829               	movf	___lwmod@divisor+1,w
   949  0156  022B               	subwf	___lwmod@dividend+1,w
   950  0157  1D03               	skipz
   951  0158  295B               	goto	u375
   952  0159  0828               	movf	___lwmod@divisor,w
   953  015A  022A               	subwf	___lwmod@dividend,w
   954  015B                     u375:	
   955  015B  1C03               	skipc
   956  015C  295E               	goto	u371
   957  015D  295F               	goto	u370
   958  015E                     u371:	
   959  015E  2965               	goto	l892
   960  015F                     u370:	
   961  015F                     l890:	
   962  015F  0828               	movf	___lwmod@divisor,w
   963  0160  02AA               	subwf	___lwmod@dividend,f
   964  0161  0829               	movf	___lwmod@divisor+1,w
   965  0162  1C03               	skipc
   966  0163  03AB               	decf	___lwmod@dividend+1,f
   967  0164  02AB               	subwf	___lwmod@dividend+1,f
   968  0165                     l892:	
   969  0165  3001               	movlw	1
   970  0166                     u385:	
   971  0166  1003               	clrc
   972  0167  0CA9               	rrf	___lwmod@divisor+1,f
   973  0168  0CA8               	rrf	___lwmod@divisor,f
   974  0169  3EFF               	addlw	-1
   975  016A  1D03               	skipz
   976  016B  2966               	goto	u385
   977  016C                     l894:	
   978  016C  3001               	movlw	1
   979  016D  02AD               	subwf	___lwmod@counter,f
   980  016E  1D03               	btfss	3,2
   981  016F  2971               	goto	u391
   982  0170  2972               	goto	u390
   983  0171                     u391:	
   984  0171  2955               	goto	l888
   985  0172                     u390:	
   986  0172                     l896:	
   987  0172  082B               	movf	___lwmod@dividend+1,w
   988  0173  00A9               	movwf	?___lwmod+1
   989  0174  082A               	movf	___lwmod@dividend,w
   990  0175  00A8               	movwf	?___lwmod
   991  0176                     l466:	
   992  0176  0008               	return
   993  0177                     __end_of___lwmod:	
   994                           
   995                           	psect	text4
   996  00F5                     __ptext4:	
   997 ;; *************** function ___lwdiv *****************
   998 ;; Defined at:
   999 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  1000 ;; Parameters:    Size  Location     Type
  1001 ;;  divisor         2    0[BANK0 ] unsigned int 
  1002 ;;  dividend        2    2[BANK0 ] unsigned int 
  1003 ;; Auto vars:     Size  Location     Type
  1004 ;;  quotient        2    5[BANK0 ] unsigned int 
  1005 ;;  counter         1    7[BANK0 ] unsigned char 
  1006 ;; Return value:  Size  Location     Type
  1007 ;;                  2    0[BANK0 ] unsigned int 
  1008 ;; Registers used:
  1009 ;;		wreg, status,2, status,0
  1010 ;; Tracked objects:
  1011 ;;		On entry : 0/0
  1012 ;;		On exit  : 0/0
  1013 ;;		Unchanged: 0/0
  1014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1015 ;;      Params:         0       4       0       0       0
  1016 ;;      Locals:         0       3       0       0       0
  1017 ;;      Temps:          0       1       0       0       0
  1018 ;;      Totals:         0       8       0       0       0
  1019 ;;Total ram usage:        8 bytes
  1020 ;; Hardware stack levels used:    1
  1021 ;; Hardware stack levels required when called:    2
  1022 ;; This function calls:
  1023 ;;		Nothing
  1024 ;; This function is called by:
  1025 ;;		_printf
  1026 ;; This function uses a non-reentrant model
  1027 ;;
  1028                           
  1029                           
  1030                           ;psect for function ___lwdiv
  1031  00F5                     ___lwdiv:	
  1032  00F5                     l852:	
  1033                           ;incstack = 0
  1034                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1035                           
  1036  00F5  1283               	bcf	3,5	;RP0=0, select bank0
  1037  00F6  1303               	bcf	3,6	;RP1=0, select bank0
  1038  00F7  01A5               	clrf	___lwdiv@quotient
  1039  00F8  01A6               	clrf	___lwdiv@quotient+1
  1040  00F9                     l854:	
  1041  00F9  0820               	movf	___lwdiv@divisor,w
  1042  00FA  0421               	iorwf	___lwdiv@divisor+1,w
  1043  00FB  1903               	btfsc	3,2
  1044  00FC  28FE               	goto	u271
  1045  00FD  28FF               	goto	u270
  1046  00FE                     u271:	
  1047  00FE  2936               	goto	l874
  1048  00FF                     u270:	
  1049  00FF                     l856:	
  1050  00FF  01A7               	clrf	___lwdiv@counter
  1051  0100  0AA7               	incf	___lwdiv@counter,f
  1052  0101  290D               	goto	l862
  1053  0102                     l858:	
  1054  0102  3001               	movlw	1
  1055  0103                     u285:	
  1056  0103  1003               	clrc
  1057  0104  0DA0               	rlf	___lwdiv@divisor,f
  1058  0105  0DA1               	rlf	___lwdiv@divisor+1,f
  1059  0106  3EFF               	addlw	-1
  1060  0107  1D03               	skipz
  1061  0108  2903               	goto	u285
  1062  0109                     l860:	
  1063  0109  3001               	movlw	1
  1064  010A  00A4               	movwf	??___lwdiv
  1065  010B  0824               	movf	??___lwdiv,w
  1066  010C  07A7               	addwf	___lwdiv@counter,f
  1067  010D                     l862:	
  1068  010D  1FA1               	btfss	___lwdiv@divisor+1,7
  1069  010E  2910               	goto	u291
  1070  010F  2911               	goto	u290
  1071  0110                     u291:	
  1072  0110  2902               	goto	l858
  1073  0111                     u290:	
  1074  0111                     l864:	
  1075  0111  3001               	movlw	1
  1076  0112                     u305:	
  1077  0112  1003               	clrc
  1078  0113  0DA5               	rlf	___lwdiv@quotient,f
  1079  0114  0DA6               	rlf	___lwdiv@quotient+1,f
  1080  0115  3EFF               	addlw	-1
  1081  0116  1D03               	skipz
  1082  0117  2912               	goto	u305
  1083  0118  0821               	movf	___lwdiv@divisor+1,w
  1084  0119  0223               	subwf	___lwdiv@dividend+1,w
  1085  011A  1D03               	skipz
  1086  011B  291E               	goto	u315
  1087  011C  0820               	movf	___lwdiv@divisor,w
  1088  011D  0222               	subwf	___lwdiv@dividend,w
  1089  011E                     u315:	
  1090  011E  1C03               	skipc
  1091  011F  2921               	goto	u311
  1092  0120  2922               	goto	u310
  1093  0121                     u311:	
  1094  0121  2929               	goto	l870
  1095  0122                     u310:	
  1096  0122                     l866:	
  1097  0122  0820               	movf	___lwdiv@divisor,w
  1098  0123  02A2               	subwf	___lwdiv@dividend,f
  1099  0124  0821               	movf	___lwdiv@divisor+1,w
  1100  0125  1C03               	skipc
  1101  0126  03A3               	decf	___lwdiv@dividend+1,f
  1102  0127  02A3               	subwf	___lwdiv@dividend+1,f
  1103  0128                     l868:	
  1104  0128  1425               	bsf	___lwdiv@quotient,0
  1105  0129                     l870:	
  1106  0129  3001               	movlw	1
  1107  012A                     u325:	
  1108  012A  1003               	clrc
  1109  012B  0CA1               	rrf	___lwdiv@divisor+1,f
  1110  012C  0CA0               	rrf	___lwdiv@divisor,f
  1111  012D  3EFF               	addlw	-1
  1112  012E  1D03               	skipz
  1113  012F  292A               	goto	u325
  1114  0130                     l872:	
  1115  0130  3001               	movlw	1
  1116  0131  02A7               	subwf	___lwdiv@counter,f
  1117  0132  1D03               	btfss	3,2
  1118  0133  2935               	goto	u331
  1119  0134  2936               	goto	u330
  1120  0135                     u331:	
  1121  0135  2911               	goto	l864
  1122  0136                     u330:	
  1123  0136                     l874:	
  1124  0136  0826               	movf	___lwdiv@quotient+1,w
  1125  0137  00A1               	movwf	?___lwdiv+1
  1126  0138  0825               	movf	___lwdiv@quotient,w
  1127  0139  00A0               	movwf	?___lwdiv
  1128  013A                     l456:	
  1129  013A  0008               	return
  1130  013B                     __end_of___lwdiv:	
  1131                           
  1132                           	psect	text5
  1133  0217                     __ptext5:	
  1134 ;; *************** function _UART_config *****************
  1135 ;; Defined at:
  1136 ;;		line 75 in file "main.c"
  1137 ;; Parameters:    Size  Location     Type
  1138 ;;		None
  1139 ;; Auto vars:     Size  Location     Type
  1140 ;;		None
  1141 ;; Return value:  Size  Location     Type
  1142 ;;                  1    wreg      void 
  1143 ;; Registers used:
  1144 ;;		wreg
  1145 ;; Tracked objects:
  1146 ;;		On entry : 0/0
  1147 ;;		On exit  : 0/0
  1148 ;;		Unchanged: 0/0
  1149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1150 ;;      Params:         0       0       0       0       0
  1151 ;;      Locals:         0       0       0       0       0
  1152 ;;      Temps:          0       0       0       0       0
  1153 ;;      Totals:         0       0       0       0       0
  1154 ;;Total ram usage:        0 bytes
  1155 ;; Hardware stack levels used:    1
  1156 ;; Hardware stack levels required when called:    2
  1157 ;; This function calls:
  1158 ;;		Nothing
  1159 ;; This function is called by:
  1160 ;;		_main
  1161 ;; This function uses a non-reentrant model
  1162 ;;
  1163                           
  1164                           
  1165                           ;psect for function _UART_config
  1166  0217                     _UART_config:	
  1167  0217                     l1006:	
  1168                           ;incstack = 0
  1169                           ; Regs used in _UART_config: [wreg]
  1170                           
  1171                           
  1172                           ;main.c: 76:      SYNC = 0;
  1173  0217  1683               	bsf	3,5	;RP0=1, select bank1
  1174  0218  1303               	bcf	3,6	;RP1=0, select bank1
  1175  0219  1218               	bcf	24,4	;volatile
  1176                           
  1177                           ;main.c: 77:      BRGH = 0;
  1178  021A  1118               	bcf	24,2	;volatile
  1179                           
  1180                           ;main.c: 78:      TXEN = 1;
  1181  021B  1698               	bsf	24,5	;volatile
  1182                           
  1183                           ;main.c: 79:     TRISCbits.TRISC6=0;
  1184  021C  1307               	bcf	7,6	;volatile
  1185  021D                     l1008:	
  1186                           
  1187                           ;main.c: 80:     RCSTA = 0X90;
  1188  021D  3090               	movlw	144
  1189  021E  1283               	bcf	3,5	;RP0=0, select bank0
  1190  021F  1303               	bcf	3,6	;RP1=0, select bank0
  1191  0220  0098               	movwf	24	;volatile
  1192  0221                     l1010:	
  1193                           
  1194                           ;main.c: 81:      TXSTAbits.TXEN = 1;
  1195  0221  1683               	bsf	3,5	;RP0=1, select bank1
  1196  0222  1303               	bcf	3,6	;RP1=0, select bank1
  1197  0223  1698               	bsf	24,5	;volatile
  1198                           
  1199                           ;main.c: 82:     SPBRG = 6;
  1200  0224  3006               	movlw	6
  1201  0225  0099               	movwf	25	;volatile
  1202  0226                     l62:	
  1203  0226  0008               	return
  1204  0227                     __end_of_UART_config:	
  1205                           
  1206                           	psect	text6
  1207  0227                     __ptext6:	
  1208 ;; *************** function _isr *****************
  1209 ;; Defined at:
  1210 ;;		line 48 in file "main.c"
  1211 ;; Parameters:    Size  Location     Type
  1212 ;;		None
  1213 ;; Auto vars:     Size  Location     Type
  1214 ;;		None
  1215 ;; Return value:  Size  Location     Type
  1216 ;;                  1    wreg      void 
  1217 ;; Registers used:
  1218 ;;		wreg, status,2, status,0, pclath, cstack
  1219 ;; Tracked objects:
  1220 ;;		On entry : 0/0
  1221 ;;		On exit  : 0/0
  1222 ;;		Unchanged: 0/0
  1223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1224 ;;      Params:         0       0       0       0       0
  1225 ;;      Locals:         0       0       0       0       0
  1226 ;;      Temps:          2       0       0       0       0
  1227 ;;      Totals:         2       0       0       0       0
  1228 ;;Total ram usage:        2 bytes
  1229 ;; Hardware stack levels used:    1
  1230 ;; Hardware stack levels required when called:    1
  1231 ;; This function calls:
  1232 ;;		_pbchange
  1233 ;; This function is called by:
  1234 ;;		Interrupt level 1
  1235 ;; This function uses a non-reentrant model
  1236 ;;
  1237                           
  1238                           
  1239                           ;psect for function _isr
  1240  0227                     _isr:	
  1241  0227                     i1l974:	
  1242                           
  1243                           ;main.c: 51: if(INTCONbits.RBIF==1)
  1244  0227  1C0B               	btfss	11,0	;volatile
  1245  0228  2A2A               	goto	u50_21
  1246  0229  2A2B               	goto	u50_20
  1247  022A                     u50_21:	
  1248  022A  2A30               	goto	i1l51
  1249  022B                     u50_20:	
  1250  022B                     i1l976:	
  1251                           
  1252                           ;main.c: 52: {;main.c: 53: pbchange();
  1253  022B  120A  118A  2177  120A  118A  	fcall	_pbchange
  1254  0230                     i1l51:	
  1255  0230  0876               	movf	??_isr+1,w
  1256  0231  008A               	movwf	10
  1257  0232  0E75               	swapf	??_isr^(0+4294967168),w
  1258  0233  0083               	movwf	3
  1259  0234  0EFE               	swapf	btemp,f
  1260  0235  0E7E               	swapf	btemp,w
  1261  0236  0009               	retfie
  1262  0237                     __end_of_isr:	
  1263                           
  1264                           	psect	intentry
  1265  0004                     __pintentry:	
  1266                           ;incstack = 0
  1267                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1268                           
  1269  0004                     interrupt_function:	
  1270  007E                     saved_w	set	btemp
  1271  0004  00FE               	movwf	btemp
  1272  0005  0E03               	swapf	3,w
  1273  0006  00F5               	movwf	??_isr
  1274  0007  080A               	movf	10,w
  1275  0008  00F6               	movwf	??_isr+1
  1276  0009  120A  118A  2A27   	ljmp	_isr
  1277                           
  1278                           	psect	text7
  1279  0177                     __ptext7:	
  1280 ;; *************** function _pbchange *****************
  1281 ;; Defined at:
  1282 ;;		line 24 in file "main.c"
  1283 ;; Parameters:    Size  Location     Type
  1284 ;;		None
  1285 ;; Auto vars:     Size  Location     Type
  1286 ;;  state           1    4[COMMON] unsigned char 
  1287 ;; Return value:  Size  Location     Type
  1288 ;;                  1    wreg      void 
  1289 ;; Registers used:
  1290 ;;		wreg, status,2, status,0
  1291 ;; Tracked objects:
  1292 ;;		On entry : 0/0
  1293 ;;		On exit  : 0/0
  1294 ;;		Unchanged: 0/0
  1295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1296 ;;      Params:         0       0       0       0       0
  1297 ;;      Locals:         1       0       0       0       0
  1298 ;;      Temps:          4       0       0       0       0
  1299 ;;      Totals:         5       0       0       0       0
  1300 ;;Total ram usage:        5 bytes
  1301 ;; Hardware stack levels used:    1
  1302 ;; This function calls:
  1303 ;;		Nothing
  1304 ;; This function is called by:
  1305 ;;		_isr
  1306 ;; This function uses a non-reentrant model
  1307 ;;
  1308                           
  1309                           
  1310                           ;psect for function _pbchange
  1311  0177                     _pbchange:	
  1312  0177                     i1l900:	
  1313                           ;incstack = 0
  1314                           ; Regs used in _pbchange: [wreg+status,2+status,0]
  1315                           
  1316                           
  1317                           ;main.c: 26: unsigned char state;;main.c: 27: static unsigned char oldstate;;main.c: 28:
      +                           _delay((unsigned long)((1)*(4000000/4000.0)));
  1318  0177  30C7               	movlw	199
  1319  0178  00F0               	movwf	??_pbchange
  1320  0179                     u52_27:	
  1321  0179  297A               	nop2
  1322  017A  0BF0               	decfsz	??_pbchange,f
  1323  017B  2979               	goto	u52_27
  1324  017C  297D               	nop2
  1325  017D  297E               	nop2
  1326  017E                     i1l902:	
  1327                           
  1328                           ;main.c: 29: state= (PORTBbits.RB5<<1 | PORTBbits.RB4);
  1329  017E  1283               	bcf	3,5	;RP0=0, select bank0
  1330  017F  1303               	bcf	3,6	;RP1=0, select bank0
  1331  0180  0E06               	swapf	6,w	;volatile
  1332  0181  3901               	andlw	1
  1333  0182  00F0               	movwf	??_pbchange
  1334  0183  0E06               	swapf	6,w	;volatile
  1335  0184  00F1               	movwf	??_pbchange+1
  1336  0185  0C71               	rrf	??_pbchange+1,w
  1337  0186  3901               	andlw	1
  1338  0187  00F2               	movwf	??_pbchange+2
  1339  0188  0772               	addwf	??_pbchange+2,w
  1340  0189  0470               	iorwf	??_pbchange,w
  1341  018A  00F3               	movwf	??_pbchange+3
  1342  018B  0873               	movf	??_pbchange+3,w
  1343  018C  00F4               	movwf	pbchange@state
  1344  018D                     i1l904:	
  1345                           
  1346                           ;main.c: 30: if(oldstate==0x0){
  1347  018D  0877               	movf	pbchange@oldstate,w
  1348  018E  1D03               	btfss	3,2
  1349  018F  2991               	goto	u40_21
  1350  0190  2992               	goto	u40_20
  1351  0191                     u40_21:	
  1352  0191  29AA               	goto	i1l41
  1353  0192                     u40_20:	
  1354  0192                     i1l906:	
  1355                           
  1356                           ;main.c: 31: if( state ==0x1)
  1357  0192  0374               	decf	pbchange@state,w
  1358  0193  1D03               	btfss	3,2
  1359  0194  2996               	goto	u41_21
  1360  0195  2997               	goto	u41_20
  1361  0196                     u41_21:	
  1362  0196  299E               	goto	i1l910
  1363  0197                     u41_20:	
  1364  0197                     i1l908:	
  1365                           
  1366                           ;main.c: 32: {;main.c: 33: count--;
  1367  0197  30FF               	movlw	255
  1368  0198  07BA               	addwf	_count,f
  1369  0199  1803               	skipnc
  1370  019A  0ABB               	incf	_count+1,f
  1371  019B  30FF               	movlw	255
  1372  019C  07BB               	addwf	_count+1,f
  1373                           
  1374                           ;main.c: 35: }else if( state == 0x2)
  1375  019D  29AA               	goto	i1l41
  1376  019E                     i1l910:	
  1377  019E  3002               	movlw	2
  1378  019F  0674               	xorwf	pbchange@state,w
  1379  01A0  1D03               	btfss	3,2
  1380  01A1  29A3               	goto	u42_21
  1381  01A2  29A4               	goto	u42_20
  1382  01A3                     u42_21:	
  1383  01A3  29AA               	goto	i1l41
  1384  01A4                     u42_20:	
  1385  01A4                     i1l912:	
  1386                           
  1387                           ;main.c: 36: {;main.c: 38: count++;
  1388  01A4  3001               	movlw	1
  1389  01A5  07BA               	addwf	_count,f
  1390  01A6  1803               	skipnc
  1391  01A7  0ABB               	incf	_count+1,f
  1392  01A8  3000               	movlw	0
  1393  01A9  07BB               	addwf	_count+1,f
  1394  01AA                     i1l41:	
  1395                           ;main.c: 42: }
  1396                           
  1397                           
  1398                           ;main.c: 43: oldstate = state;
  1399  01AA  0874               	movf	pbchange@state,w
  1400  01AB  00F0               	movwf	??_pbchange
  1401  01AC  0870               	movf	??_pbchange,w
  1402  01AD  00F7               	movwf	pbchange@oldstate
  1403                           
  1404                           ;main.c: 45: PORTB = PORTB;
  1405  01AE  0806               	movf	6,w	;volatile
  1406  01AF  0086               	movwf	6	;volatile
  1407  01B0                     i1l914:	
  1408                           
  1409                           ;main.c: 46: INTCONbits.RBIF = 0;
  1410  01B0  100B               	bcf	11,0	;volatile
  1411  01B1                     i1l45:	
  1412  01B1  0008               	return
  1413  01B2                     __end_of_pbchange:	
  1414  007E                     btemp	set	126	;btemp
  1415  007E                     wtemp0	set	126


Data Sizes:
    Strings     7
    Constant    10
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       8
    BANK0            80     26      28
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_2(CODE[2]), STR_1(CODE[5]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_pbchange

Critical Paths under _main in BANK0

    _main->_printf
    _printf->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1099
                        _UART_config
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              20    18      2    1099
                                             14 BANK0     12    10      2
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _UART_config                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0      67
                                              5 COMMON     2     2      0
                           _pbchange
 ---------------------------------------------------------------------------------
 (4) _pbchange                                             5     5      0      67
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_config
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _putch

 _isr (ROOT)
   _pbchange

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      24       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1A      1C       5       35.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      24      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Jan 04 01:28:37 2021

                      pc 0002              __CFG_CP$OFF 0000                       l62 0226  
                     l65 01D9                       l68 01ED                       fsr 0004  
                    l180 00F4                      l456 013A                      l466 0176  
                    l850 01DF                      l922 001B                      l860 0109  
                    l852 00F5                      l940 005B                      l932 002E  
                    l924 0020                      l870 0129                      l862 010D  
                    l854 00F9                      l950 0066                      l942 005F  
                    l934 004B                      l926 0026                      l872 0130  
                    l864 0111                      l856 00FF                      l880 0143  
                    l848 01D9                      l960 0098                      l944 0064  
                    l936 0053                      l928 002D                      l866 0122  
                    l858 0102                      l874 0136                      l890 015F  
                    l882 0146                      l962 009F                      l954 0082  
                    l938 0057                      l868 0128                      l892 0165  
                    l884 014D                      l964 00CF                      l956 008C  
                    l894 016C                      l886 0151                      l878 013B  
                    l966 00D5                      l958 0092                      l888 0155  
                    l896 0172                      l968 00E0                      u310 0122  
                    u311 0121                      u305 0112                      u330 0136  
                    u331 0135                      u315 011E                      u340 0143  
                    u260 01DF                      u325 012A                      u341 0142  
                    u261 01DE                      u270 00FF                      u430 0026  
                    u271 00FE                      u431 0025                      u360 0155  
                    u440 005B                      u361 0154                      u441 005A  
                    u290 0111                      u370 015F                      u450 0081  
           __CFG_CPD$OFF 0000                      u291 0110                      u371 015E  
                    u355 0147                      u451 0080                      u460 008C  
                    u285 0103                      u517 01E9                      u461 008B  
                    u390 0172                      u470 0092                      u391 0171  
                    u375 015B                      u471 0091                      u455 007D  
                    u480 00E0                      u385 0166                      u481 00DF  
                    u490 00F4                      u491 00F3                      _isr 0227  
                    fsr0 0004                      indf 0000             __CFG_FOSC$HS 0000  
           __CFG_LVP$OFF 0000                     l1010 0221                     l1012 01B2  
                   l1006 0217                     l1014 01BB                     l1008 021D  
                   l1040 0040                     l1016 01C0                     l1018 01CC  
                   ?_isr 0070                     STR_1 0210                     STR_2 0215  
                   _BRGH 04C2                     i1l41 01AA                     i1l51 0230  
                   i1l45 01B1                     _TRMT 04C1                     _TXEN 04C5  
                   _SYNC 04C4             __CFG_WRT$OFF 0000                     _main 01B2  
                   btemp 007E                     start 000C                    ??_isr 0075  
                  ?_main 0070            __CFG_WDTE$OFF 0000          __end_of___lwdiv 013B  
        __end_of___lwmod 0177                    i1l900 0177                    i1l910 019E  
                  i1l902 017E                    i1l912 01A4                    i1l904 018D  
                  i1l914 01B0                    i1l906 0192                    i1l908 0197  
                  i1l974 0227                    i1l976 022B                    _RCSTA 0018  
                  u40_20 0192                    u40_21 0191                    u41_20 0197  
                  u41_21 0196                    u42_20 01A4                    u50_20 022B  
                  u42_21 01A3                    u50_21 022A                    _SPBRG 0099  
                  _PORTB 0006                    u52_27 0179                    _TXREG 0019  
        __end_of_dpowers 0210                    _count 003A                    _putch 01D6  
         __CFG_BOREN$OFF 0000                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 01D6  
                 ??_main 003A                   ?_putch 0070           __CFG_PWRTE$OFF 0000  
           ?_UART_config 0070                ??___lwdiv 0024         __end_of_pbchange 01B2  
              ??___lwmod 002C                   _printf 0018                   saved_w 007E  
__end_of__initialization 0014           __pcstackCOMMON 0070            __end_of_putch 01EE  
         _OPTION_REGbits 0081                  ??_putch 0020               __pbssBANK0 003A  
             __pmaintext 01B2               __pintentry 0004                  ?_printf 002E  
             __stringtab 0200                ?_pbchange 0070                  ___lwdiv 00F5  
                ___lwmod 013B     __size_of_UART_config 0010                  __ptext1 0018  
                __ptext2 01D6                  __ptext3 013B                  __ptext4 00F5  
                __ptext5 0217                  __ptext6 0227                  __ptext7 0177  
        __size_of_printf 00DD                  _dpowers 0206             __size_of_isr 0010  
   end_of_initialization 0014               ??_pbchange 0070                  printf@c 0039  
                printf@f 0036                _PORTBbits 0006                _TRISBbits 0086  
              _TRISCbits 0087                _TXSTAbits 0098           __end_of_printf 00F5  
    start_initialization 000F              __end_of_isr 0237                 ??_printf 0030  
          pbchange@state 0074              __pbssCOMMON 0077                ___latbits 0002  
          __pcstackBANK0 0020        __size_of_pbchange 003B         ___lwdiv@dividend 0022  
               ?___lwdiv 0020                 ?___lwmod 0028                __pstrings 0200  
       ___lwdiv@quotient 0025           __size_of_putch 0018        interrupt_function 0004  
          ??_UART_config 0020              __stringbase 0205               printf@flag 0034  
             printf@prec 0035         __size_of___lwdiv 0046         __size_of___lwmod 003C  
     __end_of__stringtab 0206      __end_of_UART_config 0227          ___lwdiv@divisor 0020  
        ___lwdiv@counter 0027                 _pbchange 0177            __size_of_main 0024  
              printf@val 0037                putch@data 0022               _INTCONbits 000B  
               intlevel1 0000         ___lwmod@dividend 002A                stringcode 0200  
               printf@ap 0033              _UART_config 0217         pbchange@oldstate 0077  
        ___lwmod@divisor 0028          ___lwmod@counter 002D                 stringdir 0200  
               stringtab 0200  
